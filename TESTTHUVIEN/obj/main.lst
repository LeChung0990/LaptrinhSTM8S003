                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.0 #14184 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _EXTI_PORTD_IRQHandler
                                     12 	.globl _main
                                     13 	.globl _tim4_isr
                                     14 	.globl _mydelay
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; Stack segment in internal ram
                                     25 ;--------------------------------------------------------
                                     26 	.area SSEG
      000000                         27 __start__stack:
      000000                         28 	.ds	1
                                     29 
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DABS (ABS)
                                     34 
                                     35 ; default segment ordering for linker
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area CONST
                                     40 	.area INITIALIZER
                                     41 	.area CODE
                                     42 
                                     43 ;--------------------------------------------------------
                                     44 ; interrupt vector
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
      000000                         47 __interrupt_vect:
      000000 82v00u00u00             48 	int s_GSINIT ; reset
      000004 82 00 00 00             49 	int 0x000000 ; trap
      000008 82 00 00 00             50 	int 0x000000 ; int0
      00000C 82 00 00 00             51 	int 0x000000 ; int1
      000010 82 00 00 00             52 	int 0x000000 ; int2
      000014 82 00 00 00             53 	int 0x000000 ; int3
      000018 82 00 00 00             54 	int 0x000000 ; int4
      00001C 82 00 00 00             55 	int 0x000000 ; int5
      000020 82v00u00u6C             56 	int _EXTI_PORTD_IRQHandler ; int6
      000024 82 00 00 00             57 	int 0x000000 ; int7
      000028 82 00 00 00             58 	int 0x000000 ; int8
      00002C 82 00 00 00             59 	int 0x000000 ; int9
      000030 82 00 00 00             60 	int 0x000000 ; int10
      000034 82 00 00 00             61 	int 0x000000 ; int11
      000038 82 00 00 00             62 	int 0x000000 ; int12
      00003C 82 00 00 00             63 	int 0x000000 ; int13
      000040 82 00 00 00             64 	int 0x000000 ; int14
      000044 82 00 00 00             65 	int 0x000000 ; int15
      000048 82 00 00 00             66 	int 0x000000 ; int16
      00004C 82 00 00 00             67 	int 0x000000 ; int17
      000050 82 00 00 00             68 	int 0x000000 ; int18
      000054 82 00 00 00             69 	int 0x000000 ; int19
      000058 82 00 00 00             70 	int 0x000000 ; int20
      00005C 82 00 00 00             71 	int 0x000000 ; int21
      000060 82 00 00 00             72 	int 0x000000 ; int22
      000064 82v00u00u26             73 	int _tim4_isr ; int23
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME
                                     78 	.area GSINIT
                                     79 	.area GSFINAL
                                     80 	.area GSINIT
      000000 CDr00r00         [ 4]   81 	call	___sdcc_external_startup
      000003 4D               [ 1]   82 	tnz	a
      000004 27 03            [ 1]   83 	jreq	__sdcc_init_data
      000006 CCr00r68         [ 2]   84 	jp	__sdcc_program_startup
      000009                         85 __sdcc_init_data:
                                     86 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]   87 	ldw x, #l_DATA
      00000C 27 07            [ 1]   88 	jreq	00002$
      00000E                         89 00001$:
      00000E 72 4FuFFuFF      [ 1]   90 	clr (s_DATA - 1, x)
      000012 5A               [ 2]   91 	decw x
      000013 26 F9            [ 1]   92 	jrne	00001$
      000015                         93 00002$:
      000015 AEr00r00         [ 2]   94 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]   95 	jreq	00004$
      00001A                         96 00003$:
      00001A D6uFFuFF         [ 1]   97 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]   98 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]   99 	decw	x
      000021 26 F7            [ 1]  100 	jrne	00003$
      000023                        101 00004$:
                                    102 ; stm8_genXINIT() end
                                    103 	.area GSFINAL
      000000 CCr00r68         [ 2]  104 	jp	__sdcc_program_startup
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME
                                    109 	.area HOME
      000068                        110 __sdcc_program_startup:
      000068 CCr00r29         [ 2]  111 	jp	_main
                                    112 ;	return from main will return to caller
                                    113 ;--------------------------------------------------------
                                    114 ; code
                                    115 ;--------------------------------------------------------
                                    116 	.area RAM_SEG
                                    117 ;	main.c: 18: void mydelay(uint32_t time){
                                    118 ;	-----------------------------------------
                                    119 ;	 function mydelay
                                    120 ;	-----------------------------------------
      000000                        121 _mydelay:
      000000 52 04            [ 2]  122 	sub	sp, #4
                                    123 ;	main.c: 19: while(time--);
      000002 1E 09            [ 2]  124 	ldw	x, (0x09, sp)
      000004 16 07            [ 2]  125 	ldw	y, (0x07, sp)
      000006                        126 00101$:
      000006 1F 03            [ 2]  127 	ldw	(0x03, sp), x
      000008 17 01            [ 2]  128 	ldw	(0x01, sp), y
      00000A 1D 00 01         [ 2]  129 	subw	x, #0x0001
      00000D 24 02            [ 1]  130 	jrnc	00112$
      00000F 90 5A            [ 2]  131 	decw	y
      000011                        132 00112$:
      000011 0D 04            [ 1]  133 	tnz	(0x04, sp)
      000013 26 F1            [ 1]  134 	jrne	00101$
      000015 0D 03            [ 1]  135 	tnz	(0x03, sp)
      000017 26 ED            [ 1]  136 	jrne	00101$
      000019 0D 02            [ 1]  137 	tnz	(0x02, sp)
      00001B 26 E9            [ 1]  138 	jrne	00101$
      00001D 0D 01            [ 1]  139 	tnz	(0x01, sp)
      00001F 26 E5            [ 1]  140 	jrne	00101$
                                    141 ;	main.c: 20: }
      000021 1E 05            [ 2]  142 	ldw	x, (5, sp)
      000023 5B 0A            [ 2]  143 	addw	sp, #10
      000025 FC               [ 2]  144 	jp	(x)
                                    145 ;	main.c: 22: void tim4_isr() __interrupt(23) __naked {
                                    146 ;	-----------------------------------------
                                    147 ;	 function tim4_isr
                                    148 ;	-----------------------------------------
      000026                        149 _tim4_isr:
                                    150 ;	naked function: no prologue.
                                    151 ;	main.c: 23: __asm__("jp 0x8464");
      000026 CC 84 64         [ 2]  152 	jp	0x8464
                                    153 ;	main.c: 24: }
                                    154 ;	main.c: 25: void main (void)
                                    155 ;	-----------------------------------------
                                    156 ;	 function main
                                    157 ;	-----------------------------------------
      000029                        158 _main:
                                    159 ;	main.c: 29: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      000029 C6 50 C6         [ 1]  160 	ld	a, 0x50c6
      00002C A4 E7            [ 1]  161 	and	a, #0xe7
      00002E C7 50 C6         [ 1]  162 	ld	0x50c6, a
                                    163 ;	main.c: 30: CLK->CKDIVR |= (uint8_t)0x00;
      000031 55 50 C6 50 C6   [ 1]  164 	mov	0x50c6, 0x50c6
                                    165 ;	main.c: 32: LED_PORT->ODR = GPIO_ODR_RESET_VALUE; /* Reset Output Data Register */
      000036 35 00 50 0F      [ 1]  166 	mov	0x500f+0, #0x00
                                    167 ;	main.c: 33: LED_PORT->DDR = GPIO_DDR_RESET_VALUE; /* Reset Data Direction Register */
      00003A 35 00 50 11      [ 1]  168 	mov	0x5011+0, #0x00
                                    169 ;	main.c: 34: LED_PORT->CR1 = GPIO_CR1_RESET_VALUE; /* Reset Control Register 1 */
      00003E 35 00 50 12      [ 1]  170 	mov	0x5012+0, #0x00
                                    171 ;	main.c: 35: LED_PORT->CR2 = GPIO_CR2_RESET_VALUE; /* Reset Control Register 2 */
      000042 35 00 50 13      [ 1]  172 	mov	0x5013+0, #0x00
                                    173 ;	main.c: 37: LED_PORT->DDR |= (uint8_t)LED_PIN; /* Set Output mode */
      000046 72 16 50 11      [ 1]  174 	bset	0x5011, #3
                                    175 ;	main.c: 38: LED_PORT->ODR |= (uint8_t)LED_PIN; /* High level */
      00004A 72 16 50 0F      [ 1]  176 	bset	0x500f, #3
                                    177 ;	main.c: 39: LED_PORT->CR1 |= (uint8_t)LED_PIN; /* Pull-Up or Push-Pull */
      00004E 72 16 50 12      [ 1]  178 	bset	0x5012, #3
                                    179 ;	main.c: 40: LED_PORT->CR2 |= (uint8_t)LED_PIN; /* Interrupt or Slow slope */
      000052 72 16 50 13      [ 1]  180 	bset	0x5013, #3
                                    181 ;	main.c: 57: while (1)
                                    182 ;	main.c: 59: LED_PORT->ODR ^= (uint8_t)LED_PIN;
      000056 C6 50 0F         [ 1]  183 	ld	a, 0x500f
      000059 A8 08            [ 1]  184 	xor	a, #0x08
      00005B C7 50 0F         [ 1]  185 	ld	0x500f, a
                                    186 ;	main.c: 60: for (int x = 0; x < 10; ++x) __asm__("nop");
      00005E 5F               [ 1]  187 	clrw	x
      00005F                        188 00106$:
      00005F A3 00 0A         [ 2]  189 	cpw	x, #0x000a
      000062 2F 03            [ 1]  190 	jrslt	00126$
      000064 CC 84 00         [ 2]  191 	jp	0x8400
      000067                        192 00126$:
      000067 9D               [ 1]  193 	nop
      000068 5C               [ 1]  194 	incw	x
                                    195 ;	main.c: 62: __asm__("jp 0x8400");
      000069 20 F4            [ 2]  196 	jra	00106$
                                    197 ;	main.c: 87: }
      00006B 81               [ 4]  198 	ret
                                    199 ;	main.c: 100: INTERRUPT_HANDLER(EXTI_PORTD_IRQHandler, 6)
                                    200 ;	-----------------------------------------
                                    201 ;	 function EXTI_PORTD_IRQHandler
                                    202 ;	-----------------------------------------
      00006C                        203 _EXTI_PORTD_IRQHandler:
                                    204 ;	main.c: 102: LED_PORT->ODR ^= (uint8_t)LED_PIN;
      00006C 90 16 50 0F      [ 1]  205 	bcpl	0x500f, #3
                                    206 ;	main.c: 103: }
      000070 80               [11]  207 	iret
                                    208 	.area RAM_SEG
                                    209 	.area CONST
                                    210 	.area INITIALIZER
                                    211 	.area CABS (ABS)
