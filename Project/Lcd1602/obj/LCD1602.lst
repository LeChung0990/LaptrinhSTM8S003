                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.0 #14184 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module LCD1602
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM4_ClearFlag
                                     12 	.globl _TIM4_GetFlagStatus
                                     13 	.globl _TIM4_SetCounter
                                     14 	.globl _TIM4_Cmd
                                     15 	.globl _TIM4_TimeBaseInit
                                     16 	.globl _GPIO_WriteLow
                                     17 	.globl _GPIO_WriteHigh
                                     18 	.globl _GPIO_Init
                                     19 	.globl _delay_ms
                                     20 	.globl _lcd_init
                                     21 	.globl _lcd_write
                                     22 	.globl _lcd_puts
                                     23 	.globl _lcd_clear
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DATA
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DABS (ABS)
                                     36 
                                     37 ; default segment ordering for linker
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area CONST
                                     42 	.area INITIALIZER
                                     43 	.area CODE
                                     44 
                                     45 ;--------------------------------------------------------
                                     46 ; global & static initialisations
                                     47 ;--------------------------------------------------------
                                     48 	.area HOME
                                     49 	.area GSINIT
                                     50 	.area GSFINAL
                                     51 	.area GSINIT
                                     52 ;--------------------------------------------------------
                                     53 ; Home
                                     54 ;--------------------------------------------------------
                                     55 	.area HOME
                                     56 	.area HOME
                                     57 ;--------------------------------------------------------
                                     58 ; code
                                     59 ;--------------------------------------------------------
                                     60 	.area CODE
                                     61 ;	LCD1602.c: 3: void delay_ms(uint16_t u16Delay)
                                     62 ;	-----------------------------------------
                                     63 ;	 function delay_ms
                                     64 ;	-----------------------------------------
      000000                         65 _delay_ms:
      000000 52 04            [ 2]   66 	sub	sp, #4
      000002 1F 01            [ 2]   67 	ldw	(0x01, sp), x
                                     68 ;	LCD1602.c: 5: TIM4_TimeBaseInit(TIM4_PRESCALER_128, 125 - 1);
      000004 4B 7C            [ 1]   69 	push	#0x7c
      000006 A6 07            [ 1]   70 	ld	a, #0x07
      000008 CDr00r00         [ 4]   71 	call	_TIM4_TimeBaseInit
                                     72 ;	LCD1602.c: 6: TIM4_Cmd(ENABLE);
      00000B A6 01            [ 1]   73 	ld	a, #0x01
      00000D CDr00r00         [ 4]   74 	call	_TIM4_Cmd
                                     75 ;	LCD1602.c: 7: while (u16Delay) 
      000010 16 01            [ 2]   76 	ldw	y, (0x01, sp)
      000012 17 03            [ 2]   77 	ldw	(0x03, sp), y
      000014                         78 00104$:
      000014 1E 03            [ 2]   79 	ldw	x, (0x03, sp)
      000016 27 18            [ 1]   80 	jreq	00107$
                                     81 ;	LCD1602.c: 9: TIM4_SetCounter(0);
      000018 4F               [ 1]   82 	clr	a
      000019 CDr00r00         [ 4]   83 	call	_TIM4_SetCounter
                                     84 ;	LCD1602.c: 10: TIM4_ClearFlag(TIM4_FLAG_UPDATE);
      00001C A6 01            [ 1]   85 	ld	a, #0x01
      00001E CDr00r00         [ 4]   86 	call	_TIM4_ClearFlag
                                     87 ;	LCD1602.c: 11: while (TIM4_GetFlagStatus(TIM4_FLAG_UPDATE) == RESET) {}
      000021                         88 00101$:
      000021 A6 01            [ 1]   89 	ld	a, #0x01
      000023 CDr00r00         [ 4]   90 	call	_TIM4_GetFlagStatus
      000026 4D               [ 1]   91 	tnz	a
      000027 27 F8            [ 1]   92 	jreq	00101$
                                     93 ;	LCD1602.c: 12: --u16Delay;
      000029 1E 03            [ 2]   94 	ldw	x, (0x03, sp)
      00002B 5A               [ 2]   95 	decw	x
      00002C 1F 03            [ 2]   96 	ldw	(0x03, sp), x
      00002E 20 E4            [ 2]   97 	jra	00104$
      000030                         98 00107$:
                                     99 ;	LCD1602.c: 14: }
      000030 5B 04            [ 2]  100 	addw	sp, #4
      000032 81               [ 4]  101 	ret
                                    102 ;	LCD1602.c: 15: void lcd_init(void)
                                    103 ;	-----------------------------------------
                                    104 ;	 function lcd_init
                                    105 ;	-----------------------------------------
      000033                        106 _lcd_init:
                                    107 ;	LCD1602.c: 18: GPIO_Init(GPIOA,(GPIO_Pin_TypeDef)(GPIO_PIN_1|GPIO_PIN_2),GPIO_MODE_OUT_PP_LOW_FAST);
      000033 4B E0            [ 1]  108 	push	#0xe0
      000035 A6 06            [ 1]  109 	ld	a, #0x06
      000037 AE 50 00         [ 2]  110 	ldw	x, #0x5000
      00003A CDr00r00         [ 4]  111 	call	_GPIO_Init
                                    112 ;	LCD1602.c: 19: GPIO_Init(GPIOD,(GPIO_Pin_TypeDef)(GPIO_PIN_6|GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2),GPIO_MODE_OUT_PP_LOW_FAST);
      00003D 4B E0            [ 1]  113 	push	#0xe0
      00003F A6 5C            [ 1]  114 	ld	a, #0x5c
      000041 AE 50 0F         [ 2]  115 	ldw	x, #0x500f
      000044 CDr00r00         [ 4]  116 	call	_GPIO_Init
                                    117 ;	LCD1602.c: 20: delay_ms(40);
      000047 AE 00 28         [ 2]  118 	ldw	x, #0x0028
      00004A CDr00r00         [ 4]  119 	call	_delay_ms
                                    120 ;	LCD1602.c: 22: PIN_LOW(D4_PORT, D4_PIN);
      00004D A6 04            [ 1]  121 	ld	a, #0x04
      00004F AE 50 0F         [ 2]  122 	ldw	x, #0x500f
      000052 CDr00r00         [ 4]  123 	call	_GPIO_WriteLow
                                    124 ;	LCD1602.c: 23: PIN_HIGH(D5_PORT,D5_PIN);
      000055 A6 08            [ 1]  125 	ld	a, #0x08
      000057 AE 50 0F         [ 2]  126 	ldw	x, #0x500f
      00005A CDr00r00         [ 4]  127 	call	_GPIO_WriteHigh
                                    128 ;	LCD1602.c: 24: PIN_LOW(D6_PORT,D6_PIN);
      00005D A6 10            [ 1]  129 	ld	a, #0x10
      00005F AE 50 0F         [ 2]  130 	ldw	x, #0x500f
      000062 CDr00r00         [ 4]  131 	call	_GPIO_WriteLow
                                    132 ;	LCD1602.c: 25: PIN_LOW(D7_PORT,D7_PIN);
      000065 A6 40            [ 1]  133 	ld	a, #0x40
      000067 AE 50 0F         [ 2]  134 	ldw	x, #0x500f
      00006A CDr00r00         [ 4]  135 	call	_GPIO_WriteLow
                                    136 ;	LCD1602.c: 26: PIN_LOW(RS_PORT,RS_PIN);
      00006D A6 02            [ 1]  137 	ld	a, #0x02
      00006F AE 50 00         [ 2]  138 	ldw	x, #0x5000
      000072 CDr00r00         [ 4]  139 	call	_GPIO_WriteLow
                                    140 ;	LCD1602.c: 28: PIN_HIGH(EN_PORT,EN_PIN);
      000075 A6 04            [ 1]  141 	ld	a, #0x04
      000077 AE 50 00         [ 2]  142 	ldw	x, #0x5000
      00007A CDr00r00         [ 4]  143 	call	_GPIO_WriteHigh
                                    144 ;	LCD1602.c: 29: PIN_LOW(EN_PORT,EN_PIN);
      00007D A6 04            [ 1]  145 	ld	a, #0x04
      00007F AE 50 00         [ 2]  146 	ldw	x, #0x5000
      000082 CDr00r00         [ 4]  147 	call	_GPIO_WriteLow
                                    148 ;	LCD1602.c: 31: lcd_write(0,0x28);
      000085 4B 28            [ 1]  149 	push	#0x28
      000087 4F               [ 1]  150 	clr	a
      000088 CDr00r9E         [ 4]  151 	call	_lcd_write
                                    152 ;	LCD1602.c: 32: lcd_write(0,0x0c);
      00008B 4B 0C            [ 1]  153 	push	#0x0c
      00008D 4F               [ 1]  154 	clr	a
      00008E CDr00r9E         [ 4]  155 	call	_lcd_write
                                    156 ;	LCD1602.c: 33: lcd_write(0,0x06);
      000091 4B 06            [ 1]  157 	push	#0x06
      000093 4F               [ 1]  158 	clr	a
      000094 CDr00r9E         [ 4]  159 	call	_lcd_write
                                    160 ;	LCD1602.c: 34: lcd_write(0,0x01);
      000097 4B 01            [ 1]  161 	push	#0x01
      000099 4F               [ 1]  162 	clr	a
      00009A CDr00r9E         [ 4]  163 	call	_lcd_write
                                    164 ;	LCD1602.c: 35: }
      00009D 81               [ 4]  165 	ret
                                    166 ;	LCD1602.c: 37: void lcd_write(uint8_t type, uint8_t data)
                                    167 ;	-----------------------------------------
                                    168 ;	 function lcd_write
                                    169 ;	-----------------------------------------
      00009E                        170 _lcd_write:
      00009E 88               [ 1]  171 	push	a
                                    172 ;	LCD1602.c: 39: delay_ms(2);
      00009F 88               [ 1]  173 	push	a
      0000A0 AE 00 02         [ 2]  174 	ldw	x, #0x0002
      0000A3 CDr00r00         [ 4]  175 	call	_delay_ms
      0000A6 84               [ 1]  176 	pop	a
                                    177 ;	LCD1602.c: 40: if(type)
      0000A7 4D               [ 1]  178 	tnz	a
      0000A8 27 0A            [ 1]  179 	jreq	00102$
                                    180 ;	LCD1602.c: 42: PIN_HIGH(RS_PORT,RS_PIN);
      0000AA A6 02            [ 1]  181 	ld	a, #0x02
      0000AC AE 50 00         [ 2]  182 	ldw	x, #0x5000
      0000AF CDr00r00         [ 4]  183 	call	_GPIO_WriteHigh
      0000B2 20 08            [ 2]  184 	jra	00103$
      0000B4                        185 00102$:
                                    186 ;	LCD1602.c: 45: PIN_LOW(RS_PORT,RS_PIN);
      0000B4 A6 02            [ 1]  187 	ld	a, #0x02
      0000B6 AE 50 00         [ 2]  188 	ldw	x, #0x5000
      0000B9 CDr00r00         [ 4]  189 	call	_GPIO_WriteLow
      0000BC                        190 00103$:
                                    191 ;	LCD1602.c: 49: if(data&0x80)
      0000BC 7B 04            [ 1]  192 	ld	a, (0x04, sp)
      0000BE 6B 01            [ 1]  193 	ld	(0x01, sp), a
      0000C0 2A 0A            [ 1]  194 	jrpl	00105$
                                    195 ;	LCD1602.c: 51: PIN_HIGH(D7_PORT,D7_PIN);
      0000C2 A6 40            [ 1]  196 	ld	a, #0x40
      0000C4 AE 50 0F         [ 2]  197 	ldw	x, #0x500f
      0000C7 CDr00r00         [ 4]  198 	call	_GPIO_WriteHigh
      0000CA 20 08            [ 2]  199 	jra	00106$
      0000CC                        200 00105$:
                                    201 ;	LCD1602.c: 54: PIN_LOW(D7_PORT,D7_PIN);
      0000CC A6 40            [ 1]  202 	ld	a, #0x40
      0000CE AE 50 0F         [ 2]  203 	ldw	x, #0x500f
      0000D1 CDr00r00         [ 4]  204 	call	_GPIO_WriteLow
      0000D4                        205 00106$:
                                    206 ;	LCD1602.c: 57: if(data&0x40)
      0000D4 7B 01            [ 1]  207 	ld	a, (0x01, sp)
      0000D6 A5 40            [ 1]  208 	bcp	a, #0x40
      0000D8 27 0A            [ 1]  209 	jreq	00108$
                                    210 ;	LCD1602.c: 59: PIN_HIGH(D6_PORT,D6_PIN);
      0000DA A6 10            [ 1]  211 	ld	a, #0x10
      0000DC AE 50 0F         [ 2]  212 	ldw	x, #0x500f
      0000DF CDr00r00         [ 4]  213 	call	_GPIO_WriteHigh
      0000E2 20 08            [ 2]  214 	jra	00109$
      0000E4                        215 00108$:
                                    216 ;	LCD1602.c: 62: PIN_LOW(D6_PORT,D6_PIN);
      0000E4 A6 10            [ 1]  217 	ld	a, #0x10
      0000E6 AE 50 0F         [ 2]  218 	ldw	x, #0x500f
      0000E9 CDr00r00         [ 4]  219 	call	_GPIO_WriteLow
      0000EC                        220 00109$:
                                    221 ;	LCD1602.c: 65: if(data&0x20)
      0000EC 7B 01            [ 1]  222 	ld	a, (0x01, sp)
      0000EE A5 20            [ 1]  223 	bcp	a, #0x20
      0000F0 27 0A            [ 1]  224 	jreq	00111$
                                    225 ;	LCD1602.c: 67: PIN_HIGH(D5_PORT,D5_PIN);
      0000F2 A6 08            [ 1]  226 	ld	a, #0x08
      0000F4 AE 50 0F         [ 2]  227 	ldw	x, #0x500f
      0000F7 CDr00r00         [ 4]  228 	call	_GPIO_WriteHigh
      0000FA 20 08            [ 2]  229 	jra	00112$
      0000FC                        230 00111$:
                                    231 ;	LCD1602.c: 70: PIN_LOW(D5_PORT,D5_PIN);
      0000FC A6 08            [ 1]  232 	ld	a, #0x08
      0000FE AE 50 0F         [ 2]  233 	ldw	x, #0x500f
      000101 CDr00r00         [ 4]  234 	call	_GPIO_WriteLow
      000104                        235 00112$:
                                    236 ;	LCD1602.c: 73: if(data&0x10)
      000104 7B 01            [ 1]  237 	ld	a, (0x01, sp)
      000106 A5 10            [ 1]  238 	bcp	a, #0x10
      000108 27 0A            [ 1]  239 	jreq	00114$
                                    240 ;	LCD1602.c: 75: PIN_HIGH(D4_PORT,D4_PIN);
      00010A A6 04            [ 1]  241 	ld	a, #0x04
      00010C AE 50 0F         [ 2]  242 	ldw	x, #0x500f
      00010F CDr00r00         [ 4]  243 	call	_GPIO_WriteHigh
      000112 20 08            [ 2]  244 	jra	00115$
      000114                        245 00114$:
                                    246 ;	LCD1602.c: 78: PIN_LOW(D4_PORT,D4_PIN);
      000114 A6 04            [ 1]  247 	ld	a, #0x04
      000116 AE 50 0F         [ 2]  248 	ldw	x, #0x500f
      000119 CDr00r00         [ 4]  249 	call	_GPIO_WriteLow
      00011C                        250 00115$:
                                    251 ;	LCD1602.c: 80: PIN_HIGH(EN_PORT,EN_PIN);
      00011C A6 04            [ 1]  252 	ld	a, #0x04
      00011E AE 50 00         [ 2]  253 	ldw	x, #0x5000
      000121 CDr00r00         [ 4]  254 	call	_GPIO_WriteHigh
                                    255 ;	LCD1602.c: 81: PIN_LOW(EN_PORT,EN_PIN);
      000124 A6 04            [ 1]  256 	ld	a, #0x04
      000126 AE 50 00         [ 2]  257 	ldw	x, #0x5000
      000129 CDr00r00         [ 4]  258 	call	_GPIO_WriteLow
                                    259 ;	LCD1602.c: 85: if(data&0x08)
      00012C 7B 01            [ 1]  260 	ld	a, (0x01, sp)
      00012E A5 08            [ 1]  261 	bcp	a, #0x08
      000130 27 0A            [ 1]  262 	jreq	00117$
                                    263 ;	LCD1602.c: 87: PIN_HIGH(D7_PORT,D7_PIN);
      000132 A6 40            [ 1]  264 	ld	a, #0x40
      000134 AE 50 0F         [ 2]  265 	ldw	x, #0x500f
      000137 CDr00r00         [ 4]  266 	call	_GPIO_WriteHigh
      00013A 20 08            [ 2]  267 	jra	00118$
      00013C                        268 00117$:
                                    269 ;	LCD1602.c: 90: PIN_LOW(D7_PORT,D7_PIN);
      00013C A6 40            [ 1]  270 	ld	a, #0x40
      00013E AE 50 0F         [ 2]  271 	ldw	x, #0x500f
      000141 CDr00r00         [ 4]  272 	call	_GPIO_WriteLow
      000144                        273 00118$:
                                    274 ;	LCD1602.c: 93: if(data&0x04)
      000144 7B 01            [ 1]  275 	ld	a, (0x01, sp)
      000146 A5 04            [ 1]  276 	bcp	a, #0x04
      000148 27 0A            [ 1]  277 	jreq	00120$
                                    278 ;	LCD1602.c: 95: PIN_HIGH(D6_PORT,D6_PIN);
      00014A A6 10            [ 1]  279 	ld	a, #0x10
      00014C AE 50 0F         [ 2]  280 	ldw	x, #0x500f
      00014F CDr00r00         [ 4]  281 	call	_GPIO_WriteHigh
      000152 20 08            [ 2]  282 	jra	00121$
      000154                        283 00120$:
                                    284 ;	LCD1602.c: 98: PIN_LOW(D6_PORT,D6_PIN);
      000154 A6 10            [ 1]  285 	ld	a, #0x10
      000156 AE 50 0F         [ 2]  286 	ldw	x, #0x500f
      000159 CDr00r00         [ 4]  287 	call	_GPIO_WriteLow
      00015C                        288 00121$:
                                    289 ;	LCD1602.c: 101: if(data&0x02)
      00015C 7B 01            [ 1]  290 	ld	a, (0x01, sp)
      00015E A5 02            [ 1]  291 	bcp	a, #0x02
      000160 27 0A            [ 1]  292 	jreq	00123$
                                    293 ;	LCD1602.c: 103: PIN_HIGH(D5_PORT,D5_PIN);
      000162 A6 08            [ 1]  294 	ld	a, #0x08
      000164 AE 50 0F         [ 2]  295 	ldw	x, #0x500f
      000167 CDr00r00         [ 4]  296 	call	_GPIO_WriteHigh
      00016A 20 08            [ 2]  297 	jra	00124$
      00016C                        298 00123$:
                                    299 ;	LCD1602.c: 106: PIN_LOW(D5_PORT,D5_PIN);
      00016C A6 08            [ 1]  300 	ld	a, #0x08
      00016E AE 50 0F         [ 2]  301 	ldw	x, #0x500f
      000171 CDr00r00         [ 4]  302 	call	_GPIO_WriteLow
      000174                        303 00124$:
                                    304 ;	LCD1602.c: 109: if(data&0x01)
      000174 7B 01            [ 1]  305 	ld	a, (0x01, sp)
      000176 44               [ 1]  306 	srl	a
      000177 24 0A            [ 1]  307 	jrnc	00126$
                                    308 ;	LCD1602.c: 111: PIN_HIGH(D4_PORT,D4_PIN);
      000179 A6 04            [ 1]  309 	ld	a, #0x04
      00017B AE 50 0F         [ 2]  310 	ldw	x, #0x500f
      00017E CDr00r00         [ 4]  311 	call	_GPIO_WriteHigh
      000181 20 08            [ 2]  312 	jra	00127$
      000183                        313 00126$:
                                    314 ;	LCD1602.c: 114: PIN_LOW(D4_PORT,D4_PIN);
      000183 A6 04            [ 1]  315 	ld	a, #0x04
      000185 AE 50 0F         [ 2]  316 	ldw	x, #0x500f
      000188 CDr00r00         [ 4]  317 	call	_GPIO_WriteLow
      00018B                        318 00127$:
                                    319 ;	LCD1602.c: 116: PIN_HIGH(EN_PORT,EN_PIN);
      00018B A6 04            [ 1]  320 	ld	a, #0x04
      00018D AE 50 00         [ 2]  321 	ldw	x, #0x5000
      000190 CDr00r00         [ 4]  322 	call	_GPIO_WriteHigh
                                    323 ;	LCD1602.c: 117: PIN_LOW(EN_PORT,EN_PIN);
      000193 A6 04            [ 1]  324 	ld	a, #0x04
      000195 AE 50 00         [ 2]  325 	ldw	x, #0x5000
      000198 16 02            [ 2]  326 	ldw	y, (2, sp)
      00019A 17 03            [ 2]  327 	ldw	(3, sp), y
      00019C 5B 02            [ 2]  328 	addw	sp, #2
      00019E CCr00r00         [ 2]  329 	jp	_GPIO_WriteLow
                                    330 ;	LCD1602.c: 118: }
      0001A1 84               [ 1]  331 	pop	a
      0001A2 85               [ 2]  332 	popw	x
      0001A3 84               [ 1]  333 	pop	a
      0001A4 FC               [ 2]  334 	jp	(x)
                                    335 ;	LCD1602.c: 120: void lcd_puts(uint8_t x, uint8_t y, int8_t *string)
                                    336 ;	-----------------------------------------
                                    337 ;	 function lcd_puts
                                    338 ;	-----------------------------------------
      0001A5                        339 _lcd_puts:
                                    340 ;	LCD1602.c: 125: lcd_write(0,0x80+0x00+y);
      0001A5 41               [ 1]  341 	exg	a, xl
      0001A6 7B 03            [ 1]  342 	ld	a, (0x03, sp)
      0001A8 41               [ 1]  343 	exg	a, xl
                                    344 ;	LCD1602.c: 122: switch(x)
      0001A9 A1 00            [ 1]  345 	cp	a, #0x00
      0001AB 27 05            [ 1]  346 	jreq	00101$
      0001AD 4A               [ 1]  347 	dec	a
      0001AE 27 0C            [ 1]  348 	jreq	00102$
      0001B0 20 12            [ 2]  349 	jra	00112$
                                    350 ;	LCD1602.c: 124: case 0: //Row 0
      0001B2                        351 00101$:
                                    352 ;	LCD1602.c: 125: lcd_write(0,0x80+0x00+y);
      0001B2 9F               [ 1]  353 	ld	a, xl
      0001B3 AB 80            [ 1]  354 	add	a, #0x80
      0001B5 88               [ 1]  355 	push	a
      0001B6 4F               [ 1]  356 	clr	a
      0001B7 CDr00r9E         [ 4]  357 	call	_lcd_write
                                    358 ;	LCD1602.c: 126: break;
      0001BA 20 08            [ 2]  359 	jra	00112$
                                    360 ;	LCD1602.c: 127: case 1: //Row 1
      0001BC                        361 00102$:
                                    362 ;	LCD1602.c: 128: lcd_write(0,0x80+0x40+y);
      0001BC 9F               [ 1]  363 	ld	a, xl
      0001BD AB C0            [ 1]  364 	add	a, #0xc0
      0001BF 88               [ 1]  365 	push	a
      0001C0 4F               [ 1]  366 	clr	a
      0001C1 CDr00r9E         [ 4]  367 	call	_lcd_write
                                    368 ;	LCD1602.c: 131: while(*string)
      0001C4                        369 00112$:
      0001C4 1E 04            [ 2]  370 	ldw	x, (0x04, sp)
      0001C6                        371 00104$:
      0001C6 F6               [ 1]  372 	ld	a, (x)
      0001C7 27 0B            [ 1]  373 	jreq	00107$
                                    374 ;	LCD1602.c: 133: lcd_write(1,*string);
      0001C9 89               [ 2]  375 	pushw	x
      0001CA 88               [ 1]  376 	push	a
      0001CB A6 01            [ 1]  377 	ld	a, #0x01
      0001CD CDr00r9E         [ 4]  378 	call	_lcd_write
      0001D0 85               [ 2]  379 	popw	x
                                    380 ;	LCD1602.c: 134: string++;
      0001D1 5C               [ 1]  381 	incw	x
      0001D2 20 F2            [ 2]  382 	jra	00104$
      0001D4                        383 00107$:
                                    384 ;	LCD1602.c: 136: }
      0001D4 1E 01            [ 2]  385 	ldw	x, (1, sp)
      0001D6 5B 05            [ 2]  386 	addw	sp, #5
      0001D8 FC               [ 2]  387 	jp	(x)
                                    388 ;	LCD1602.c: 137: void lcd_clear(void)
                                    389 ;	-----------------------------------------
                                    390 ;	 function lcd_clear
                                    391 ;	-----------------------------------------
      0001D9                        392 _lcd_clear:
                                    393 ;	LCD1602.c: 139: lcd_write(0,0x01);
      0001D9 4B 01            [ 1]  394 	push	#0x01
      0001DB 4F               [ 1]  395 	clr	a
      0001DC CDr00r9E         [ 4]  396 	call	_lcd_write
                                    397 ;	LCD1602.c: 140: }
      0001DF 81               [ 4]  398 	ret
                                    399 	.area CODE
                                    400 	.area CONST
                                    401 	.area INITIALIZER
                                    402 	.area CABS (ABS)
