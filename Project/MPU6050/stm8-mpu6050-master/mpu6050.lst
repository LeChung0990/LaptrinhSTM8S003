                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  3 2018) (Linux)
                                      4 ; This file was generated Fri Mar 21 14:03:42 2025
                                      5 ;--------------------------------------------------------
                                      6 	.module mpu6050
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _segmentMap
                                     13 	.globl _main
                                     14 	.globl _getMPU6050
                                     15 	.globl _initMPU6050
                                     16 	.globl _tm1637DisplayDecimal
                                     17 	.globl _tm1637Init
                                     18 	.globl _InitializeUART
                                     19 	.globl _InitializeI2C
                                     20 	.globl _i2c_read_register
                                     21 	.globl _print_byte_hex
                                     22 	.globl _i2c_set_start_ack
                                     23 	.globl _i2c_send_address
                                     24 	.globl _UARTPrintF
                                     25 	.globl _i2c_send_reg
                                     26 	.globl _i2c_set_stop
                                     27 	.globl _i2c_set_nak
                                     28 	.globl _i2c_read
                                     29 	.globl _delay
                                     30 	.globl _InitializeSystemClock
                                     31 	.globl _delayTenMicro
                                     32 	.globl _tm1637SetBrightness
                                     33 	.globl __tm1637Start
                                     34 	.globl __tm1637Stop
                                     35 	.globl __tm1637ReadResult
                                     36 	.globl __tm1637WriteByte
                                     37 	.globl __tm1637ClkHigh
                                     38 	.globl __tm1637ClkLow
                                     39 	.globl __tm1637DioHigh
                                     40 	.globl __tm1637DioLow
                                     41 ;--------------------------------------------------------
                                     42 ; ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DATA
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area INITIALIZED
                                     49 ;--------------------------------------------------------
                                     50 ; Stack segment in internal ram 
                                     51 ;--------------------------------------------------------
                                     52 	.area	SSEG
      000000                         53 __start__stack:
      000000                         54 	.ds	1
                                     55 
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area DABS (ABS)
                                     60 ;--------------------------------------------------------
                                     61 ; interrupt vector 
                                     62 ;--------------------------------------------------------
                                     63 	.area HOME
      000000                         64 __interrupt_vect:
      000000 82v00u00u00             65 	int s_GSINIT ;reset
      000004 82 00 00 00             66 	int 0x0000 ;trap
      000008 82 00 00 00             67 	int 0x0000 ;int0
      00000C 82 00 00 00             68 	int 0x0000 ;int1
      000010 82 00 00 00             69 	int 0x0000 ;int2
      000014 82 00 00 00             70 	int 0x0000 ;int3
      000018 82 00 00 00             71 	int 0x0000 ;int4
      00001C 82 00 00 00             72 	int 0x0000 ;int5
      000020 82 00 00 00             73 	int 0x0000 ;int6
      000024 82 00 00 00             74 	int 0x0000 ;int7
      000028 82 00 00 00             75 	int 0x0000 ;int8
      00002C 82 00 00 00             76 	int 0x0000 ;int9
      000030 82 00 00 00             77 	int 0x0000 ;int10
      000034 82 00 00 00             78 	int 0x0000 ;int11
      000038 82 00 00 00             79 	int 0x0000 ;int12
      00003C 82 00 00 00             80 	int 0x0000 ;int13
      000040 82 00 00 00             81 	int 0x0000 ;int14
      000044 82 00 00 00             82 	int 0x0000 ;int15
      000048 82 00 00 00             83 	int 0x0000 ;int16
      00004C 82 00 00 00             84 	int 0x0000 ;int17
      000050 82 00 00 00             85 	int 0x0000 ;int18
      000054 82 00 00 00             86 	int 0x0000 ;int19
      000058 82 00 00 00             87 	int 0x0000 ;int20
      00005C 82 00 00 00             88 	int 0x0000 ;int21
      000060 82 00 00 00             89 	int 0x0000 ;int22
      000064 82 00 00 00             90 	int 0x0000 ;int23
      000068 82 00 00 00             91 	int 0x0000 ;int24
      00006C 82 00 00 00             92 	int 0x0000 ;int25
      000070 82 00 00 00             93 	int 0x0000 ;int26
      000074 82 00 00 00             94 	int 0x0000 ;int27
      000078 82 00 00 00             95 	int 0x0000 ;int28
      00007C 82 00 00 00             96 	int 0x0000 ;int29
                                     97 ;--------------------------------------------------------
                                     98 ; global & static initialisations
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME
                                    101 	.area GSINIT
                                    102 	.area GSFINAL
                                    103 	.area GSINIT
      000000                        104 __sdcc_gs_init_startup:
      000000                        105 __sdcc_init_data:
                                    106 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  107 	ldw x, #l_DATA
      000003 27 07            [ 1]  108 	jreq	00002$
      000005                        109 00001$:
      000005 72 4FuFFuFF      [ 1]  110 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  111 	decw x
      00000A 26 F9            [ 1]  112 	jrne	00001$
      00000C                        113 00002$:
      00000C AEr00r00         [ 2]  114 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  115 	jreq	00004$
      000011                        116 00003$:
      000011 D6uFFuFF         [ 1]  117 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  118 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  119 	decw	x
      000018 26 F7            [ 1]  120 	jrne	00003$
      00001A                        121 00004$:
                                    122 ; stm8_genXINIT() end
                                    123 	.area GSFINAL
      000000 CCr00r80         [ 2]  124 	jp	__sdcc_program_startup
                                    125 ;--------------------------------------------------------
                                    126 ; Home
                                    127 ;--------------------------------------------------------
                                    128 	.area HOME
                                    129 	.area HOME
      000080                        130 __sdcc_program_startup:
      000080 CCr04r8E         [ 2]  131 	jp	_main
                                    132 ;	return from main will return to caller
                                    133 ;--------------------------------------------------------
                                    134 ; code
                                    135 ;--------------------------------------------------------
                                    136 	.area CODE
                                    137 ;	mpu6050.c: 17: void delayTenMicro (void) {
                                    138 ;	-----------------------------------------
                                    139 ;	 function delayTenMicro
                                    140 ;	-----------------------------------------
      000000                        141 _delayTenMicro:
                                    142 ;	mpu6050.c: 19: for (a = 0; a < 50; ++a)
      000000 A6 32            [ 1]  143 	ld	a, #0x32
      000002 95               [ 1]  144 	ld	xh, a
      000003                        145 00104$:
                                    146 ;	mpu6050.c: 20: __asm__("nop");
      000003 9D               [ 1]  147 	nop
      000004 9E               [ 1]  148 	ld	a, xh
      000005 4A               [ 1]  149 	dec	a
      000006 95               [ 1]  150 	ld	xh, a
                                    151 ;	mpu6050.c: 19: for (a = 0; a < 50; ++a)
      000007 4D               [ 1]  152 	tnz	a
      000008 26 F9            [ 1]  153 	jrne	00104$
      00000A 81               [ 4]  154 	ret
                                    155 ;	mpu6050.c: 23: void InitializeSystemClock() {
                                    156 ;	-----------------------------------------
                                    157 ;	 function InitializeSystemClock
                                    158 ;	-----------------------------------------
      00000B                        159 _InitializeSystemClock:
                                    160 ;	mpu6050.c: 24: CLK_ICKR = 0;                       //  Reset the Internal Clock Register.
      00000B 35 00 50 C0      [ 1]  161 	mov	0x50c0+0, #0x00
                                    162 ;	mpu6050.c: 25: CLK_ICKR = CLK_HSIEN;               //  Enable the HSI.
      00000F 35 01 50 C0      [ 1]  163 	mov	0x50c0+0, #0x01
                                    164 ;	mpu6050.c: 26: CLK_ECKR = 0;                       //  Disable the external clock.
      000013 35 00 50 C1      [ 1]  165 	mov	0x50c1+0, #0x00
                                    166 ;	mpu6050.c: 27: while ((CLK_ICKR & CLK_HSIRDY) == 0);       //  Wait for the HSI to be ready for use.
      000017                        167 00101$:
      000017 AE 50 C0         [ 2]  168 	ldw	x, #0x50c0
      00001A F6               [ 1]  169 	ld	a, (x)
      00001B A5 02            [ 1]  170 	bcp	a, #0x02
      00001D 27 F8            [ 1]  171 	jreq	00101$
                                    172 ;	mpu6050.c: 28: CLK_CKDIVR = 0;                     //  Ensure the clocks are running at full speed.
      00001F 35 00 50 C6      [ 1]  173 	mov	0x50c6+0, #0x00
                                    174 ;	mpu6050.c: 29: CLK_PCKENR1 = 0xff;                 //  Enable all peripheral clocks.
      000023 35 FF 50 C7      [ 1]  175 	mov	0x50c7+0, #0xff
                                    176 ;	mpu6050.c: 30: CLK_PCKENR2 = 0xff;                 //  Ditto.
      000027 35 FF 50 CA      [ 1]  177 	mov	0x50ca+0, #0xff
                                    178 ;	mpu6050.c: 31: CLK_CCOR = 0;                       //  Turn off CCO.
      00002B 35 00 50 C9      [ 1]  179 	mov	0x50c9+0, #0x00
                                    180 ;	mpu6050.c: 32: CLK_HSITRIMR = 0;                   //  Turn off any HSIU trimming.
      00002F 35 00 50 CC      [ 1]  181 	mov	0x50cc+0, #0x00
                                    182 ;	mpu6050.c: 33: CLK_SWIMCCR = 0;                    //  Set SWIM to run at clock / 2.
      000033 35 00 50 CD      [ 1]  183 	mov	0x50cd+0, #0x00
                                    184 ;	mpu6050.c: 34: CLK_SWR = 0xe1;                     //  Use HSI as the clock source.
      000037 35 E1 50 C4      [ 1]  185 	mov	0x50c4+0, #0xe1
                                    186 ;	mpu6050.c: 35: CLK_SWCR = 0;                       //  Reset the clock switch control register.
      00003B 35 00 50 C5      [ 1]  187 	mov	0x50c5+0, #0x00
                                    188 ;	mpu6050.c: 36: CLK_SWCR = CLK_SWEN;                //  Enable switching.
      00003F 35 02 50 C5      [ 1]  189 	mov	0x50c5+0, #0x02
                                    190 ;	mpu6050.c: 37: while ((CLK_SWCR & CLK_SWBSY) != 0);        //  Pause while the clock switch is busy.
      000043                        191 00104$:
      000043 AE 50 C5         [ 2]  192 	ldw	x, #0x50c5
      000046 F6               [ 1]  193 	ld	a, (x)
      000047 44               [ 1]  194 	srl	a
      000048 25 F9            [ 1]  195 	jrc	00104$
      00004A 81               [ 4]  196 	ret
                                    197 ;	mpu6050.c: 39: void delay (int time_ms) {
                                    198 ;	-----------------------------------------
                                    199 ;	 function delay
                                    200 ;	-----------------------------------------
      00004B                        201 _delay:
      00004B 52 0A            [ 2]  202 	sub	sp, #10
                                    203 ;	mpu6050.c: 41: for (x = 0; x < 1036*time_ms; ++x)
      00004D 5F               [ 1]  204 	clrw	x
      00004E 1F 03            [ 2]  205 	ldw	(0x03, sp), x
      000050 1F 01            [ 2]  206 	ldw	(0x01, sp), x
      000052 1E 0D            [ 2]  207 	ldw	x, (0x0d, sp)
      000054 89               [ 2]  208 	pushw	x
      000055 4B 0C            [ 1]  209 	push	#0x0c
      000057 4B 04            [ 1]  210 	push	#0x04
      000059 CDr00r00         [ 4]  211 	call	__mulint
      00005C 5B 04            [ 2]  212 	addw	sp, #4
      00005E 1F 09            [ 2]  213 	ldw	(0x09, sp), x
      000060                        214 00103$:
      000060 16 09            [ 2]  215 	ldw	y, (0x09, sp)
      000062 17 07            [ 2]  216 	ldw	(0x07, sp), y
      000064 7B 07            [ 1]  217 	ld	a, (0x07, sp)
      000066 49               [ 1]  218 	rlc	a
      000067 4F               [ 1]  219 	clr	a
      000068 A2 00            [ 1]  220 	sbc	a, #0x00
      00006A 6B 06            [ 1]  221 	ld	(0x06, sp), a
      00006C 6B 05            [ 1]  222 	ld	(0x05, sp), a
      00006E 1E 03            [ 2]  223 	ldw	x, (0x03, sp)
      000070 13 07            [ 2]  224 	cpw	x, (0x07, sp)
      000072 7B 02            [ 1]  225 	ld	a, (0x02, sp)
      000074 12 06            [ 1]  226 	sbc	a, (0x06, sp)
      000076 7B 01            [ 1]  227 	ld	a, (0x01, sp)
      000078 12 05            [ 1]  228 	sbc	a, (0x05, sp)
      00007A 2E 17            [ 1]  229 	jrsge	00105$
                                    230 ;	mpu6050.c: 42: __asm__("nop");
      00007C 9D               [ 1]  231 	nop
                                    232 ;	mpu6050.c: 41: for (x = 0; x < 1036*time_ms; ++x)
      00007D 16 03            [ 2]  233 	ldw	y, (0x03, sp)
      00007F 72 A9 00 01      [ 2]  234 	addw	y, #0x0001
      000083 7B 02            [ 1]  235 	ld	a, (0x02, sp)
      000085 A9 00            [ 1]  236 	adc	a, #0x00
      000087 97               [ 1]  237 	ld	xl, a
      000088 7B 01            [ 1]  238 	ld	a, (0x01, sp)
      00008A A9 00            [ 1]  239 	adc	a, #0x00
      00008C 95               [ 1]  240 	ld	xh, a
      00008D 17 03            [ 2]  241 	ldw	(0x03, sp), y
      00008F 1F 01            [ 2]  242 	ldw	(0x01, sp), x
      000091 20 CD            [ 2]  243 	jra	00103$
      000093                        244 00105$:
      000093 5B 0A            [ 2]  245 	addw	sp, #10
      000095 81               [ 4]  246 	ret
                                    247 ;	mpu6050.c: 44: void i2c_read (unsigned char *x) {
                                    248 ;	-----------------------------------------
                                    249 ;	 function i2c_read
                                    250 ;	-----------------------------------------
      000096                        251 _i2c_read:
                                    252 ;	mpu6050.c: 45: while ((I2C_SR1 & I2C_RXNE) == 0);
      000096                        253 00101$:
      000096 AE 52 17         [ 2]  254 	ldw	x, #0x5217
      000099 F6               [ 1]  255 	ld	a, (x)
      00009A A5 40            [ 1]  256 	bcp	a, #0x40
      00009C 27 F8            [ 1]  257 	jreq	00101$
                                    258 ;	mpu6050.c: 46: *x = I2C_DR;
      00009E 16 03            [ 2]  259 	ldw	y, (0x03, sp)
      0000A0 AE 52 16         [ 2]  260 	ldw	x, #0x5216
      0000A3 F6               [ 1]  261 	ld	a, (x)
      0000A4 90 F7            [ 1]  262 	ld	(y), a
      0000A6 81               [ 4]  263 	ret
                                    264 ;	mpu6050.c: 48: void i2c_set_nak (void) {
                                    265 ;	-----------------------------------------
                                    266 ;	 function i2c_set_nak
                                    267 ;	-----------------------------------------
      0000A7                        268 _i2c_set_nak:
                                    269 ;	mpu6050.c: 49: I2C_CR2 &= ~I2C_ACK;
      0000A7 AE 52 11         [ 2]  270 	ldw	x, #0x5211
      0000AA F6               [ 1]  271 	ld	a, (x)
      0000AB A4 FB            [ 1]  272 	and	a, #0xfb
      0000AD F7               [ 1]  273 	ld	(x), a
      0000AE 81               [ 4]  274 	ret
                                    275 ;	mpu6050.c: 51: void i2c_set_stop (void) {
                                    276 ;	-----------------------------------------
                                    277 ;	 function i2c_set_stop
                                    278 ;	-----------------------------------------
      0000AF                        279 _i2c_set_stop:
                                    280 ;	mpu6050.c: 52: I2C_CR2 |= I2C_STOP;
      0000AF AE 52 11         [ 2]  281 	ldw	x, #0x5211
      0000B2 F6               [ 1]  282 	ld	a, (x)
      0000B3 AA 02            [ 1]  283 	or	a, #0x02
      0000B5 F7               [ 1]  284 	ld	(x), a
      0000B6 81               [ 4]  285 	ret
                                    286 ;	mpu6050.c: 54: void i2c_send_reg (UCHAR addr) {
                                    287 ;	-----------------------------------------
                                    288 ;	 function i2c_send_reg
                                    289 ;	-----------------------------------------
      0000B7                        290 _i2c_send_reg:
      0000B7 52 02            [ 2]  291 	sub	sp, #2
                                    292 ;	mpu6050.c: 56: reg = I2C_SR1;
      0000B9 AE 52 17         [ 2]  293 	ldw	x, #0x5217
      0000BC F6               [ 1]  294 	ld	a, (x)
      0000BD 5F               [ 1]  295 	clrw	x
      0000BE 97               [ 1]  296 	ld	xl, a
      0000BF 1F 01            [ 2]  297 	ldw	(0x01, sp), x
                                    298 ;	mpu6050.c: 57: reg = I2C_SR3;
      0000C1 AE 52 19         [ 2]  299 	ldw	x, #0x5219
      0000C4 F6               [ 1]  300 	ld	a, (x)
      0000C5 5F               [ 1]  301 	clrw	x
      0000C6 97               [ 1]  302 	ld	xl, a
      0000C7 1F 01            [ 2]  303 	ldw	(0x01, sp), x
                                    304 ;	mpu6050.c: 58: I2C_DR = addr;
      0000C9 AE 52 16         [ 2]  305 	ldw	x, #0x5216
      0000CC 7B 05            [ 1]  306 	ld	a, (0x05, sp)
      0000CE F7               [ 1]  307 	ld	(x), a
                                    308 ;	mpu6050.c: 59: while ((I2C_SR1 & I2C_TXE) == 0);
      0000CF                        309 00101$:
      0000CF AE 52 17         [ 2]  310 	ldw	x, #0x5217
      0000D2 F6               [ 1]  311 	ld	a, (x)
      0000D3 4D               [ 1]  312 	tnz	a
      0000D4 2A F9            [ 1]  313 	jrpl	00101$
      0000D6 5B 02            [ 2]  314 	addw	sp, #2
      0000D8 81               [ 4]  315 	ret
                                    316 ;	mpu6050.c: 63: void UARTPrintF (char *message) {
                                    317 ;	-----------------------------------------
                                    318 ;	 function UARTPrintF
                                    319 ;	-----------------------------------------
      0000D9                        320 _UARTPrintF:
                                    321 ;	mpu6050.c: 64: char *ch = message;
      0000D9 16 03            [ 2]  322 	ldw	y, (0x03, sp)
                                    323 ;	mpu6050.c: 65: while (*ch) {
      0000DB                        324 00104$:
      0000DB 90 F6            [ 1]  325 	ld	a, (y)
      0000DD 4D               [ 1]  326 	tnz	a
      0000DE 27 0F            [ 1]  327 	jreq	00107$
                                    328 ;	mpu6050.c: 66: UART1_DR = (unsigned char) *ch;     //  Put the next character into the data transmission register.
      0000E0 AE 52 31         [ 2]  329 	ldw	x, #0x5231
      0000E3 F7               [ 1]  330 	ld	(x), a
                                    331 ;	mpu6050.c: 67: while ((UART1_SR & SR_TXE) == 0);   //  Wait for transmission to complete.
      0000E4                        332 00101$:
      0000E4 AE 52 30         [ 2]  333 	ldw	x, #0x5230
      0000E7 F6               [ 1]  334 	ld	a, (x)
      0000E8 4D               [ 1]  335 	tnz	a
      0000E9 2A F9            [ 1]  336 	jrpl	00101$
                                    337 ;	mpu6050.c: 68: ch++;                               //  Grab the next character.
      0000EB 90 5C            [ 2]  338 	incw	y
      0000ED 20 EC            [ 2]  339 	jra	00104$
      0000EF                        340 00107$:
      0000EF 81               [ 4]  341 	ret
                                    342 ;	mpu6050.c: 74: void i2c_send_address (UCHAR addr, UCHAR mode) {
                                    343 ;	-----------------------------------------
                                    344 ;	 function i2c_send_address
                                    345 ;	-----------------------------------------
      0000F0                        346 _i2c_send_address:
      0000F0 52 03            [ 2]  347 	sub	sp, #3
                                    348 ;	mpu6050.c: 76: reg = I2C_SR1;
      0000F2 AE 52 17         [ 2]  349 	ldw	x, #0x5217
      0000F5 F6               [ 1]  350 	ld	a, (x)
      0000F6 5F               [ 1]  351 	clrw	x
      0000F7 97               [ 1]  352 	ld	xl, a
      0000F8 1F 01            [ 2]  353 	ldw	(0x01, sp), x
                                    354 ;	mpu6050.c: 77: I2C_DR = (addr << 1) | mode;
      0000FA 7B 06            [ 1]  355 	ld	a, (0x06, sp)
      0000FC 48               [ 1]  356 	sll	a
      0000FD 1A 07            [ 1]  357 	or	a, (0x07, sp)
      0000FF AE 52 16         [ 2]  358 	ldw	x, #0x5216
      000102 F7               [ 1]  359 	ld	(x), a
                                    360 ;	mpu6050.c: 78: if (mode == I2C_READ) {
      000103 7B 07            [ 1]  361 	ld	a, (0x07, sp)
      000105 A1 01            [ 1]  362 	cp	a, #0x01
      000107 26 06            [ 1]  363 	jrne	00127$
      000109 A6 01            [ 1]  364 	ld	a, #0x01
      00010B 6B 03            [ 1]  365 	ld	(0x03, sp), a
      00010D 20 02            [ 2]  366 	jra	00128$
      00010F                        367 00127$:
      00010F 0F 03            [ 1]  368 	clr	(0x03, sp)
      000111                        369 00128$:
      000111 0D 03            [ 1]  370 	tnz	(0x03, sp)
      000113 27 08            [ 1]  371 	jreq	00103$
                                    372 ;	mpu6050.c: 79: I2C_OARL = 0;
      000115 35 00 52 13      [ 1]  373 	mov	0x5213+0, #0x00
                                    374 ;	mpu6050.c: 80: I2C_OARH = 0;
      000119 35 00 52 14      [ 1]  375 	mov	0x5214+0, #0x00
                                    376 ;	mpu6050.c: 83: while ((I2C_SR1 & I2C_ADDR) == 0);
      00011D                        377 00103$:
                                    378 ;	mpu6050.c: 76: reg = I2C_SR1;
      00011D AE 52 17         [ 2]  379 	ldw	x, #0x5217
      000120 F6               [ 1]  380 	ld	a, (x)
                                    381 ;	mpu6050.c: 83: while ((I2C_SR1 & I2C_ADDR) == 0);
      000121 A5 02            [ 1]  382 	bcp	a, #0x02
      000123 27 F8            [ 1]  383 	jreq	00103$
                                    384 ;	mpu6050.c: 84: if (mode == I2C_READ)
      000125 0D 03            [ 1]  385 	tnz	(0x03, sp)
      000127 27 06            [ 1]  386 	jreq	00108$
                                    387 ;	mpu6050.c: 85: UNSET (I2C_SR1, I2C_ADDR);
      000129 A4 FD            [ 1]  388 	and	a, #0xfd
      00012B AE 52 17         [ 2]  389 	ldw	x, #0x5217
      00012E F7               [ 1]  390 	ld	(x), a
      00012F                        391 00108$:
      00012F 5B 03            [ 2]  392 	addw	sp, #3
      000131 81               [ 4]  393 	ret
                                    394 ;	mpu6050.c: 88: void i2c_set_start_ack (void) {
                                    395 ;	-----------------------------------------
                                    396 ;	 function i2c_set_start_ack
                                    397 ;	-----------------------------------------
      000132                        398 _i2c_set_start_ack:
                                    399 ;	mpu6050.c: 89: I2C_CR2 = I2C_ACK | I2C_START;
      000132 35 05 52 11      [ 1]  400 	mov	0x5211+0, #0x05
                                    401 ;	mpu6050.c: 90: while ((I2C_SR1 & I2C_SB) == 0);
      000136                        402 00101$:
      000136 AE 52 17         [ 2]  403 	ldw	x, #0x5217
      000139 F6               [ 1]  404 	ld	a, (x)
      00013A 44               [ 1]  405 	srl	a
      00013B 24 F9            [ 1]  406 	jrnc	00101$
      00013D 81               [ 4]  407 	ret
                                    408 ;	mpu6050.c: 97: void print_byte_hex (unsigned char buffer) {
                                    409 ;	-----------------------------------------
                                    410 ;	 function print_byte_hex
                                    411 ;	-----------------------------------------
      00013E                        412 _print_byte_hex:
      00013E 52 0E            [ 2]  413 	sub	sp, #14
                                    414 ;	mpu6050.c: 100: a = (buffer >> 4);
      000140 7B 11            [ 1]  415 	ld	a, (0x11, sp)
      000142 4E               [ 1]  416 	swap	a
      000143 A4 0F            [ 1]  417 	and	a, #0x0f
      000145 5F               [ 1]  418 	clrw	x
      000146 97               [ 1]  419 	ld	xl, a
                                    420 ;	mpu6050.c: 101: if (a > 9)
      000147 A3 00 09         [ 2]  421 	cpw	x, #0x0009
      00014A 2D 07            [ 1]  422 	jrsle	00102$
                                    423 ;	mpu6050.c: 102: a = a + 'a' - 10;
      00014C 1C 00 57         [ 2]  424 	addw	x, #0x0057
      00014F 1F 0B            [ 2]  425 	ldw	(0x0b, sp), x
      000151 20 05            [ 2]  426 	jra	00103$
      000153                        427 00102$:
                                    428 ;	mpu6050.c: 104: a += '0'; 
      000153 1C 00 30         [ 2]  429 	addw	x, #0x0030
      000156 1F 0B            [ 2]  430 	ldw	(0x0b, sp), x
      000158                        431 00103$:
                                    432 ;	mpu6050.c: 105: b = buffer & 0x0f;
      000158 7B 11            [ 1]  433 	ld	a, (0x11, sp)
      00015A A4 0F            [ 1]  434 	and	a, #0x0f
      00015C 5F               [ 1]  435 	clrw	x
      00015D 97               [ 1]  436 	ld	xl, a
                                    437 ;	mpu6050.c: 106: if (b > 9)
      00015E A3 00 09         [ 2]  438 	cpw	x, #0x0009
      000161 2D 07            [ 1]  439 	jrsle	00105$
                                    440 ;	mpu6050.c: 107: b = b + 'a' - 10;
      000163 1C 00 57         [ 2]  441 	addw	x, #0x0057
      000166 1F 09            [ 2]  442 	ldw	(0x09, sp), x
      000168 20 05            [ 2]  443 	jra	00106$
      00016A                        444 00105$:
                                    445 ;	mpu6050.c: 109: b += '0'; 
      00016A 1C 00 30         [ 2]  446 	addw	x, #0x0030
      00016D 1F 09            [ 2]  447 	ldw	(0x09, sp), x
      00016F                        448 00106$:
                                    449 ;	mpu6050.c: 110: message[0] = a;
      00016F 96               [ 1]  450 	ldw	x, sp
      000170 5C               [ 2]  451 	incw	x
      000171 1F 0D            [ 2]  452 	ldw	(0x0d, sp), x
      000173 7B 0C            [ 1]  453 	ld	a, (0x0c, sp)
      000175 1E 0D            [ 2]  454 	ldw	x, (0x0d, sp)
      000177 F7               [ 1]  455 	ld	(x), a
                                    456 ;	mpu6050.c: 111: message[1] = b;
      000178 1E 0D            [ 2]  457 	ldw	x, (0x0d, sp)
      00017A 5C               [ 2]  458 	incw	x
      00017B 7B 0A            [ 1]  459 	ld	a, (0x0a, sp)
      00017D F7               [ 1]  460 	ld	(x), a
                                    461 ;	mpu6050.c: 112: message[2] = 0;
      00017E 1E 0D            [ 2]  462 	ldw	x, (0x0d, sp)
      000180 5C               [ 2]  463 	incw	x
      000181 5C               [ 2]  464 	incw	x
      000182 7F               [ 1]  465 	clr	(x)
                                    466 ;	mpu6050.c: 113: UARTPrintF (message);
      000183 1E 0D            [ 2]  467 	ldw	x, (0x0d, sp)
      000185 89               [ 2]  468 	pushw	x
      000186 CDr00rD9         [ 4]  469 	call	_UARTPrintF
      000189 5B 10            [ 2]  470 	addw	sp, #16
      00018B 81               [ 4]  471 	ret
                                    472 ;	mpu6050.c: 117: unsigned char i2c_read_register (UCHAR addr, UCHAR rg) {
                                    473 ;	-----------------------------------------
                                    474 ;	 function i2c_read_register
                                    475 ;	-----------------------------------------
      00018C                        476 _i2c_read_register:
      00018C 52 02            [ 2]  477 	sub	sp, #2
                                    478 ;	mpu6050.c: 120: i2c_set_start_ack ();
      00018E CDr01r32         [ 4]  479 	call	_i2c_set_start_ack
                                    480 ;	mpu6050.c: 121: i2c_send_address (addr, I2C_WRITE);
      000191 4B 00            [ 1]  481 	push	#0x00
      000193 7B 06            [ 1]  482 	ld	a, (0x06, sp)
      000195 88               [ 1]  483 	push	a
      000196 CDr00rF0         [ 4]  484 	call	_i2c_send_address
      000199 5B 02            [ 2]  485 	addw	sp, #2
                                    486 ;	mpu6050.c: 122: i2c_send_reg (rg);
      00019B 7B 06            [ 1]  487 	ld	a, (0x06, sp)
      00019D 88               [ 1]  488 	push	a
      00019E CDr00rB7         [ 4]  489 	call	_i2c_send_reg
      0001A1 84               [ 1]  490 	pop	a
                                    491 ;	mpu6050.c: 123: i2c_set_start_ack ();
      0001A2 CDr01r32         [ 4]  492 	call	_i2c_set_start_ack
                                    493 ;	mpu6050.c: 124: i2c_send_address (addr, I2C_READ);
      0001A5 4B 01            [ 1]  494 	push	#0x01
      0001A7 7B 06            [ 1]  495 	ld	a, (0x06, sp)
      0001A9 88               [ 1]  496 	push	a
      0001AA CDr00rF0         [ 4]  497 	call	_i2c_send_address
      0001AD 5B 02            [ 2]  498 	addw	sp, #2
                                    499 ;	mpu6050.c: 125: reg = I2C_SR1;
      0001AF AE 52 17         [ 2]  500 	ldw	x, #0x5217
      0001B2 F6               [ 1]  501 	ld	a, (x)
      0001B3 6B 02            [ 1]  502 	ld	(0x02, sp), a
                                    503 ;	mpu6050.c: 126: reg = I2C_SR3;
      0001B5 AE 52 19         [ 2]  504 	ldw	x, #0x5219
      0001B8 F6               [ 1]  505 	ld	a, (x)
      0001B9 6B 02            [ 1]  506 	ld	(0x02, sp), a
                                    507 ;	mpu6050.c: 127: i2c_set_nak ();
      0001BB CDr00rA7         [ 4]  508 	call	_i2c_set_nak
                                    509 ;	mpu6050.c: 128: i2c_set_stop ();
      0001BE CDr00rAF         [ 4]  510 	call	_i2c_set_stop
                                    511 ;	mpu6050.c: 129: i2c_read (&x);
      0001C1 96               [ 1]  512 	ldw	x, sp
      0001C2 5C               [ 2]  513 	incw	x
      0001C3 89               [ 2]  514 	pushw	x
      0001C4 CDr00r96         [ 4]  515 	call	_i2c_read
      0001C7 5B 02            [ 2]  516 	addw	sp, #2
                                    517 ;	mpu6050.c: 130: return (x);
      0001C9 7B 01            [ 1]  518 	ld	a, (0x01, sp)
      0001CB 5B 02            [ 2]  519 	addw	sp, #2
      0001CD 81               [ 4]  520 	ret
                                    521 ;	mpu6050.c: 133: void InitializeI2C (void) {
                                    522 ;	-----------------------------------------
                                    523 ;	 function InitializeI2C
                                    524 ;	-----------------------------------------
      0001CE                        525 _InitializeI2C:
                                    526 ;	mpu6050.c: 134: I2C_CR1 = 0;   //  Disable I2C before configuration starts. PE bit is bit 0
      0001CE 35 00 52 10      [ 1]  527 	mov	0x5210+0, #0x00
                                    528 ;	mpu6050.c: 138: I2C_FREQR = 16;                     //  Set the internal clock frequency (MHz).
      0001D2 35 10 52 12      [ 1]  529 	mov	0x5212+0, #0x10
                                    530 ;	mpu6050.c: 139: UNSET (I2C_CCRH, I2C_FS);           //  I2C running is standard mode.
      0001D6 72 1F 52 1C      [ 1]  531 	bres	0x521c, #7
                                    532 ;	mpu6050.c: 141: I2C_CCRL = 0xa0;                    //  SCL clock speed is 50 kHz.
      0001DA 35 A0 52 1B      [ 1]  533 	mov	0x521b+0, #0xa0
                                    534 ;	mpu6050.c: 143: I2C_CCRH &= 0x00;	// Clears lower 4 bits "CCR"
      0001DE 35 00 52 1C      [ 1]  535 	mov	0x521c+0, #0x00
                                    536 ;	mpu6050.c: 147: UNSET (I2C_OARH, I2C_ADDMODE);      //  7 bit address mode.
      0001E2 72 1F 52 14      [ 1]  537 	bres	0x5214, #7
                                    538 ;	mpu6050.c: 148: SET (I2C_OARH, I2C_ADDCONF);        //  Docs say this must always be 1.
      0001E6 AE 52 14         [ 2]  539 	ldw	x, #0x5214
      0001E9 F6               [ 1]  540 	ld	a, (x)
      0001EA AA 40            [ 1]  541 	or	a, #0x40
      0001EC F7               [ 1]  542 	ld	(x), a
                                    543 ;	mpu6050.c: 152: I2C_TRISER = 17;
      0001ED 35 11 52 1D      [ 1]  544 	mov	0x521d+0, #0x11
                                    545 ;	mpu6050.c: 160: I2C_CR1 = I2C_PE;	// Enables port
      0001F1 35 01 52 10      [ 1]  546 	mov	0x5210+0, #0x01
      0001F5 81               [ 4]  547 	ret
                                    548 ;	mpu6050.c: 166: void InitializeUART() {
                                    549 ;	-----------------------------------------
                                    550 ;	 function InitializeUART
                                    551 ;	-----------------------------------------
      0001F6                        552 _InitializeUART:
                                    553 ;	mpu6050.c: 176: UART1_CR1 = 0;
      0001F6 35 00 52 34      [ 1]  554 	mov	0x5234+0, #0x00
                                    555 ;	mpu6050.c: 177: UART1_CR2 = 0;
      0001FA 35 00 52 35      [ 1]  556 	mov	0x5235+0, #0x00
                                    557 ;	mpu6050.c: 178: UART1_CR4 = 0;
      0001FE 35 00 52 37      [ 1]  558 	mov	0x5237+0, #0x00
                                    559 ;	mpu6050.c: 179: UART1_CR3 = 0;
      000202 35 00 52 36      [ 1]  560 	mov	0x5236+0, #0x00
                                    561 ;	mpu6050.c: 180: UART1_CR5 = 0;
      000206 35 00 52 38      [ 1]  562 	mov	0x5238+0, #0x00
                                    563 ;	mpu6050.c: 181: UART1_GTR = 0;
      00020A 35 00 52 39      [ 1]  564 	mov	0x5239+0, #0x00
                                    565 ;	mpu6050.c: 182: UART1_PSCR = 0;
      00020E 35 00 52 3A      [ 1]  566 	mov	0x523a+0, #0x00
                                    567 ;	mpu6050.c: 186: UNSET (UART1_CR1, CR1_M);        //  8 Data bits.
      000212 AE 52 34         [ 2]  568 	ldw	x, #0x5234
      000215 F6               [ 1]  569 	ld	a, (x)
      000216 A4 EF            [ 1]  570 	and	a, #0xef
      000218 F7               [ 1]  571 	ld	(x), a
                                    572 ;	mpu6050.c: 187: UNSET (UART1_CR1, CR1_PCEN);     //  Disable parity.
      000219 AE 52 34         [ 2]  573 	ldw	x, #0x5234
      00021C F6               [ 1]  574 	ld	a, (x)
      00021D A4 FB            [ 1]  575 	and	a, #0xfb
      00021F F7               [ 1]  576 	ld	(x), a
                                    577 ;	mpu6050.c: 188: UNSET (UART1_CR3, CR3_STOPH);    //  1 stop bit.
      000220 AE 52 36         [ 2]  578 	ldw	x, #0x5236
      000223 F6               [ 1]  579 	ld	a, (x)
      000224 A4 DF            [ 1]  580 	and	a, #0xdf
      000226 F7               [ 1]  581 	ld	(x), a
                                    582 ;	mpu6050.c: 189: UNSET (UART1_CR3, CR3_STOPL);    //  1 stop bit.
      000227 AE 52 36         [ 2]  583 	ldw	x, #0x5236
      00022A F6               [ 1]  584 	ld	a, (x)
      00022B A4 EF            [ 1]  585 	and	a, #0xef
      00022D F7               [ 1]  586 	ld	(x), a
                                    587 ;	mpu6050.c: 190: UART1_BRR2 = 0x0a;      //  Set the baud rate registers to 115200 baud
      00022E 35 0A 52 33      [ 1]  588 	mov	0x5233+0, #0x0a
                                    589 ;	mpu6050.c: 191: UART1_BRR1 = 0x08;      //  based upon a 16 MHz system clock.
      000232 35 08 52 32      [ 1]  590 	mov	0x5232+0, #0x08
                                    591 ;	mpu6050.c: 195: UNSET (UART1_CR2, CR2_TEN);      //  Disable transmit.
      000236 AE 52 35         [ 2]  592 	ldw	x, #0x5235
      000239 F6               [ 1]  593 	ld	a, (x)
      00023A A4 F7            [ 1]  594 	and	a, #0xf7
      00023C F7               [ 1]  595 	ld	(x), a
                                    596 ;	mpu6050.c: 196: UNSET (UART1_CR2, CR2_REN);      //  Disable receive.
      00023D AE 52 35         [ 2]  597 	ldw	x, #0x5235
      000240 F6               [ 1]  598 	ld	a, (x)
      000241 A4 FB            [ 1]  599 	and	a, #0xfb
      000243 F7               [ 1]  600 	ld	(x), a
                                    601 ;	mpu6050.c: 200: SET (UART1_CR3, CR3_CPOL);
      000244 AE 52 36         [ 2]  602 	ldw	x, #0x5236
      000247 F6               [ 1]  603 	ld	a, (x)
      000248 AA 04            [ 1]  604 	or	a, #0x04
      00024A F7               [ 1]  605 	ld	(x), a
                                    606 ;	mpu6050.c: 201: SET (UART1_CR3, CR3_CPHA);
      00024B AE 52 36         [ 2]  607 	ldw	x, #0x5236
      00024E F6               [ 1]  608 	ld	a, (x)
      00024F AA 02            [ 1]  609 	or	a, #0x02
      000251 F7               [ 1]  610 	ld	(x), a
                                    611 ;	mpu6050.c: 202: SET (UART1_CR3, CR3_LBCL);
      000252 72 10 52 36      [ 1]  612 	bset	0x5236, #0
                                    613 ;	mpu6050.c: 206: SET (UART1_CR2, CR2_TEN);
      000256 AE 52 35         [ 2]  614 	ldw	x, #0x5235
      000259 F6               [ 1]  615 	ld	a, (x)
      00025A AA 08            [ 1]  616 	or	a, #0x08
      00025C F7               [ 1]  617 	ld	(x), a
                                    618 ;	mpu6050.c: 207: SET (UART1_CR2, CR2_REN);
      00025D AE 52 35         [ 2]  619 	ldw	x, #0x5235
      000260 F6               [ 1]  620 	ld	a, (x)
      000261 AA 04            [ 1]  621 	or	a, #0x04
      000263 F7               [ 1]  622 	ld	(x), a
                                    623 ;	mpu6050.c: 208: UART1_CR3 = CR3_CLKEN;
      000264 35 08 52 36      [ 1]  624 	mov	0x5236+0, #0x08
      000268 81               [ 4]  625 	ret
                                    626 ;	mpu6050.c: 236: void tm1637Init(void)
                                    627 ;	-----------------------------------------
                                    628 ;	 function tm1637Init
                                    629 ;	-----------------------------------------
      000269                        630 _tm1637Init:
                                    631 ;	mpu6050.c: 238: tm1637SetBrightness(8);
      000269 4B 08            [ 1]  632 	push	#0x08
      00026B CDr03r06         [ 4]  633 	call	_tm1637SetBrightness
      00026E 84               [ 1]  634 	pop	a
      00026F 81               [ 4]  635 	ret
                                    636 ;	mpu6050.c: 243: void tm1637DisplayDecimal(long TT,unsigned int displaySeparator)
                                    637 ;	-----------------------------------------
                                    638 ;	 function tm1637DisplayDecimal
                                    639 ;	-----------------------------------------
      000270                        640 _tm1637DisplayDecimal:
      000270 52 0D            [ 2]  641 	sub	sp, #13
                                    642 ;	mpu6050.c: 245: unsigned int v = TT & 0x0000FFFF;
      000272 16 12            [ 2]  643 	ldw	y, (0x12, sp)
      000274 5F               [ 1]  644 	clrw	x
      000275 17 01            [ 2]  645 	ldw	(0x01, sp), y
                                    646 ;	mpu6050.c: 251: for (ii = 0; ii < 4; ++ii) {
      000277 96               [ 1]  647 	ldw	x, sp
      000278 1C 00 05         [ 2]  648 	addw	x, #5
      00027B 1F 0C            [ 2]  649 	ldw	(0x0c, sp), x
      00027D AEr06r14         [ 2]  650 	ldw	x, #_segmentMap+0
      000280 1F 0A            [ 2]  651 	ldw	(0x0a, sp), x
      000282 5F               [ 1]  652 	clrw	x
      000283 1F 03            [ 2]  653 	ldw	(0x03, sp), x
      000285                        654 00106$:
                                    655 ;	mpu6050.c: 252: digitArr[ii] = segmentMap[v % 10];
      000285 1E 0C            [ 2]  656 	ldw	x, (0x0c, sp)
      000287 72 FB 03         [ 2]  657 	addw	x, (0x03, sp)
      00028A 89               [ 2]  658 	pushw	x
      00028B 1E 03            [ 2]  659 	ldw	x, (0x03, sp)
      00028D 90 AE 00 0A      [ 2]  660 	ldw	y, #0x000a
      000291 65               [ 2]  661 	divw	x, y
      000292 90 9F            [ 1]  662 	ld	a, yl
      000294 85               [ 2]  663 	popw	x
      000295 90 97            [ 1]  664 	ld	yl, a
      000297 72 F9 0A         [ 2]  665 	addw	y, (0x0a, sp)
      00029A 90 F6            [ 1]  666 	ld	a, (y)
      00029C F7               [ 1]  667 	ld	(x), a
                                    668 ;	mpu6050.c: 253: if (ii == 2 && displaySeparator) {
      00029D 89               [ 2]  669 	pushw	x
      00029E 1E 05            [ 2]  670 	ldw	x, (0x05, sp)
      0002A0 A3 00 02         [ 2]  671 	cpw	x, #0x0002
      0002A3 85               [ 2]  672 	popw	x
      0002A4 26 08            [ 1]  673 	jrne	00102$
      0002A6 16 14            [ 2]  674 	ldw	y, (0x14, sp)
      0002A8 27 04            [ 1]  675 	jreq	00102$
                                    676 ;	mpu6050.c: 254: digitArr[ii] |= 1 << 7;
      0002AA F6               [ 1]  677 	ld	a, (x)
      0002AB AA 80            [ 1]  678 	or	a, #0x80
      0002AD F7               [ 1]  679 	ld	(x), a
      0002AE                        680 00102$:
                                    681 ;	mpu6050.c: 256: v /= 10;
      0002AE 1E 01            [ 2]  682 	ldw	x, (0x01, sp)
      0002B0 90 AE 00 0A      [ 2]  683 	ldw	y, #0x000a
      0002B4 65               [ 2]  684 	divw	x, y
      0002B5 1F 01            [ 2]  685 	ldw	(0x01, sp), x
                                    686 ;	mpu6050.c: 251: for (ii = 0; ii < 4; ++ii) {
      0002B7 1E 03            [ 2]  687 	ldw	x, (0x03, sp)
      0002B9 5C               [ 2]  688 	incw	x
      0002BA 1F 03            [ 2]  689 	ldw	(0x03, sp), x
      0002BC 1E 03            [ 2]  690 	ldw	x, (0x03, sp)
      0002BE A3 00 04         [ 2]  691 	cpw	x, #0x0004
      0002C1 25 C2            [ 1]  692 	jrc	00106$
                                    693 ;	mpu6050.c: 259: _tm1637Start();
      0002C3 CDr03r18         [ 4]  694 	call	__tm1637Start
                                    695 ;	mpu6050.c: 260: _tm1637WriteByte(0x40);
      0002C6 4B 40            [ 1]  696 	push	#0x40
      0002C8 CDr03r6C         [ 4]  697 	call	__tm1637WriteByte
      0002CB 84               [ 1]  698 	pop	a
                                    699 ;	mpu6050.c: 261: _tm1637ReadResult();
      0002CC CDr03r51         [ 4]  700 	call	__tm1637ReadResult
                                    701 ;	mpu6050.c: 262: _tm1637Stop();
      0002CF CDr03r2A         [ 4]  702 	call	__tm1637Stop
                                    703 ;	mpu6050.c: 264: _tm1637Start();
      0002D2 CDr03r18         [ 4]  704 	call	__tm1637Start
                                    705 ;	mpu6050.c: 265: _tm1637WriteByte(0xc0);
      0002D5 4B C0            [ 1]  706 	push	#0xc0
      0002D7 CDr03r6C         [ 4]  707 	call	__tm1637WriteByte
      0002DA 84               [ 1]  708 	pop	a
                                    709 ;	mpu6050.c: 266: _tm1637ReadResult();
      0002DB CDr03r51         [ 4]  710 	call	__tm1637ReadResult
                                    711 ;	mpu6050.c: 268: for (ii = 0; ii < 4; ++ii) {
      0002DE 5F               [ 1]  712 	clrw	x
      0002DF                        713 00108$:
                                    714 ;	mpu6050.c: 269: _tm1637WriteByte(digitArr[3 - ii]);
      0002DF 41               [ 1]  715 	exg	a, xl
      0002E0 6B 09            [ 1]  716 	ld	(0x09, sp), a
      0002E2 41               [ 1]  717 	exg	a, xl
      0002E3 A6 03            [ 1]  718 	ld	a, #0x03
      0002E5 10 09            [ 1]  719 	sub	a, (0x09, sp)
      0002E7 90 5F            [ 1]  720 	clrw	y
      0002E9 90 97            [ 1]  721 	ld	yl, a
      0002EB 72 F9 0C         [ 2]  722 	addw	y, (0x0c, sp)
      0002EE 90 F6            [ 1]  723 	ld	a, (y)
      0002F0 89               [ 2]  724 	pushw	x
      0002F1 88               [ 1]  725 	push	a
      0002F2 CDr03r6C         [ 4]  726 	call	__tm1637WriteByte
      0002F5 84               [ 1]  727 	pop	a
      0002F6 CDr03r51         [ 4]  728 	call	__tm1637ReadResult
      0002F9 85               [ 2]  729 	popw	x
                                    730 ;	mpu6050.c: 268: for (ii = 0; ii < 4; ++ii) {
      0002FA 5C               [ 2]  731 	incw	x
      0002FB A3 00 04         [ 2]  732 	cpw	x, #0x0004
      0002FE 25 DF            [ 1]  733 	jrc	00108$
                                    734 ;	mpu6050.c: 273: _tm1637Stop();
      000300 CDr03r2A         [ 4]  735 	call	__tm1637Stop
      000303 5B 0D            [ 2]  736 	addw	sp, #13
      000305 81               [ 4]  737 	ret
                                    738 ;	mpu6050.c: 278: void tm1637SetBrightness(char brightness)
                                    739 ;	-----------------------------------------
                                    740 ;	 function tm1637SetBrightness
                                    741 ;	-----------------------------------------
      000306                        742 _tm1637SetBrightness:
                                    743 ;	mpu6050.c: 285: _tm1637Start();
      000306 CDr03r18         [ 4]  744 	call	__tm1637Start
                                    745 ;	mpu6050.c: 286: _tm1637WriteByte(0x87 + brightness);
      000309 7B 03            [ 1]  746 	ld	a, (0x03, sp)
      00030B AB 87            [ 1]  747 	add	a, #0x87
      00030D 88               [ 1]  748 	push	a
      00030E CDr03r6C         [ 4]  749 	call	__tm1637WriteByte
      000311 84               [ 1]  750 	pop	a
                                    751 ;	mpu6050.c: 287: _tm1637ReadResult();
      000312 CDr03r51         [ 4]  752 	call	__tm1637ReadResult
                                    753 ;	mpu6050.c: 288: _tm1637Stop();
      000315 CCr03r2A         [ 2]  754 	jp	__tm1637Stop
                                    755 ;	mpu6050.c: 291: void _tm1637Start(void)
                                    756 ;	-----------------------------------------
                                    757 ;	 function _tm1637Start
                                    758 ;	-----------------------------------------
      000318                        759 __tm1637Start:
                                    760 ;	mpu6050.c: 293: _tm1637ClkHigh();
      000318 CDr03rAA         [ 4]  761 	call	__tm1637ClkHigh
                                    762 ;	mpu6050.c: 294: _tm1637DioHigh();
      00031B CDr03rBA         [ 4]  763 	call	__tm1637DioHigh
                                    764 ;	mpu6050.c: 295: delay(5);
      00031E 4B 05            [ 1]  765 	push	#0x05
      000320 4B 00            [ 1]  766 	push	#0x00
      000322 CDr00r4B         [ 4]  767 	call	_delay
      000325 5B 02            [ 2]  768 	addw	sp, #2
                                    769 ;	mpu6050.c: 296: _tm1637DioLow();
      000327 CCr03rC2         [ 2]  770 	jp	__tm1637DioLow
                                    771 ;	mpu6050.c: 299: void _tm1637Stop(void)
                                    772 ;	-----------------------------------------
                                    773 ;	 function _tm1637Stop
                                    774 ;	-----------------------------------------
      00032A                        775 __tm1637Stop:
                                    776 ;	mpu6050.c: 301: _tm1637ClkLow();
      00032A CDr03rB2         [ 4]  777 	call	__tm1637ClkLow
                                    778 ;	mpu6050.c: 302: delay(5);
      00032D 4B 05            [ 1]  779 	push	#0x05
      00032F 4B 00            [ 1]  780 	push	#0x00
      000331 CDr00r4B         [ 4]  781 	call	_delay
      000334 5B 02            [ 2]  782 	addw	sp, #2
                                    783 ;	mpu6050.c: 303: _tm1637DioLow();
      000336 CDr03rC2         [ 4]  784 	call	__tm1637DioLow
                                    785 ;	mpu6050.c: 304: delay(5);
      000339 4B 05            [ 1]  786 	push	#0x05
      00033B 4B 00            [ 1]  787 	push	#0x00
      00033D CDr00r4B         [ 4]  788 	call	_delay
      000340 5B 02            [ 2]  789 	addw	sp, #2
                                    790 ;	mpu6050.c: 305: _tm1637ClkHigh();
      000342 CDr03rAA         [ 4]  791 	call	__tm1637ClkHigh
                                    792 ;	mpu6050.c: 306: delay(5);
      000345 4B 05            [ 1]  793 	push	#0x05
      000347 4B 00            [ 1]  794 	push	#0x00
      000349 CDr00r4B         [ 4]  795 	call	_delay
      00034C 5B 02            [ 2]  796 	addw	sp, #2
                                    797 ;	mpu6050.c: 307: _tm1637DioHigh();
      00034E CCr03rBA         [ 2]  798 	jp	__tm1637DioHigh
                                    799 ;	mpu6050.c: 310: void _tm1637ReadResult(void)
                                    800 ;	-----------------------------------------
                                    801 ;	 function _tm1637ReadResult
                                    802 ;	-----------------------------------------
      000351                        803 __tm1637ReadResult:
                                    804 ;	mpu6050.c: 312: _tm1637ClkLow();
      000351 CDr03rB2         [ 4]  805 	call	__tm1637ClkLow
                                    806 ;	mpu6050.c: 313: delay(5);
      000354 4B 05            [ 1]  807 	push	#0x05
      000356 4B 00            [ 1]  808 	push	#0x00
      000358 CDr00r4B         [ 4]  809 	call	_delay
      00035B 5B 02            [ 2]  810 	addw	sp, #2
                                    811 ;	mpu6050.c: 315: _tm1637ClkHigh();
      00035D CDr03rAA         [ 4]  812 	call	__tm1637ClkHigh
                                    813 ;	mpu6050.c: 316: delay(5);
      000360 4B 05            [ 1]  814 	push	#0x05
      000362 4B 00            [ 1]  815 	push	#0x00
      000364 CDr00r4B         [ 4]  816 	call	_delay
      000367 5B 02            [ 2]  817 	addw	sp, #2
                                    818 ;	mpu6050.c: 317: _tm1637ClkLow();
      000369 CCr03rB2         [ 2]  819 	jp	__tm1637ClkLow
                                    820 ;	mpu6050.c: 320: void _tm1637WriteByte(unsigned char b)
                                    821 ;	-----------------------------------------
                                    822 ;	 function _tm1637WriteByte
                                    823 ;	-----------------------------------------
      00036C                        824 __tm1637WriteByte:
      00036C 52 02            [ 2]  825 	sub	sp, #2
                                    826 ;	mpu6050.c: 322: for (ii = 0; ii < 8; ++ii) {
      00036E 5F               [ 1]  827 	clrw	x
      00036F 1F 01            [ 2]  828 	ldw	(0x01, sp), x
      000371                        829 00105$:
                                    830 ;	mpu6050.c: 323: _tm1637ClkLow();
      000371 CDr03rB2         [ 4]  831 	call	__tm1637ClkLow
                                    832 ;	mpu6050.c: 324: if (b & 0x01) {
      000374 7B 05            [ 1]  833 	ld	a, (0x05, sp)
      000376 44               [ 1]  834 	srl	a
      000377 24 05            [ 1]  835 	jrnc	00102$
                                    836 ;	mpu6050.c: 325: _tm1637DioHigh();
      000379 CDr03rBA         [ 4]  837 	call	__tm1637DioHigh
      00037C 20 03            [ 2]  838 	jra	00103$
      00037E                        839 00102$:
                                    840 ;	mpu6050.c: 328: _tm1637DioLow();
      00037E CDr03rC2         [ 4]  841 	call	__tm1637DioLow
      000381                        842 00103$:
                                    843 ;	mpu6050.c: 330: delay(15);
      000381 4B 0F            [ 1]  844 	push	#0x0f
      000383 4B 00            [ 1]  845 	push	#0x00
      000385 CDr00r4B         [ 4]  846 	call	_delay
      000388 5B 02            [ 2]  847 	addw	sp, #2
                                    848 ;	mpu6050.c: 331: b >>= 1;
      00038A 7B 05            [ 1]  849 	ld	a, (0x05, sp)
      00038C 44               [ 1]  850 	srl	a
      00038D 6B 05            [ 1]  851 	ld	(0x05, sp), a
                                    852 ;	mpu6050.c: 332: _tm1637ClkHigh();
      00038F CDr03rAA         [ 4]  853 	call	__tm1637ClkHigh
                                    854 ;	mpu6050.c: 333: delay(15);
      000392 4B 0F            [ 1]  855 	push	#0x0f
      000394 4B 00            [ 1]  856 	push	#0x00
      000396 CDr00r4B         [ 4]  857 	call	_delay
      000399 5B 02            [ 2]  858 	addw	sp, #2
                                    859 ;	mpu6050.c: 322: for (ii = 0; ii < 8; ++ii) {
      00039B 1E 01            [ 2]  860 	ldw	x, (0x01, sp)
      00039D 5C               [ 2]  861 	incw	x
      00039E 1F 01            [ 2]  862 	ldw	(0x01, sp), x
      0003A0 1E 01            [ 2]  863 	ldw	x, (0x01, sp)
      0003A2 A3 00 08         [ 2]  864 	cpw	x, #0x0008
      0003A5 2F CA            [ 1]  865 	jrslt	00105$
      0003A7 5B 02            [ 2]  866 	addw	sp, #2
      0003A9 81               [ 4]  867 	ret
                                    868 ;	mpu6050.c: 339: void _tm1637ClkHigh(void)
                                    869 ;	-----------------------------------------
                                    870 ;	 function _tm1637ClkHigh
                                    871 ;	-----------------------------------------
      0003AA                        872 __tm1637ClkHigh:
                                    873 ;	mpu6050.c: 344: PD_ODR |= 1 << 2;
      0003AA AE 50 0F         [ 2]  874 	ldw	x, #0x500f
      0003AD F6               [ 1]  875 	ld	a, (x)
      0003AE AA 04            [ 1]  876 	or	a, #0x04
      0003B0 F7               [ 1]  877 	ld	(x), a
      0003B1 81               [ 4]  878 	ret
                                    879 ;	mpu6050.c: 347: void _tm1637ClkLow(void)
                                    880 ;	-----------------------------------------
                                    881 ;	 function _tm1637ClkLow
                                    882 ;	-----------------------------------------
      0003B2                        883 __tm1637ClkLow:
                                    884 ;	mpu6050.c: 351: PD_ODR &= ~(1 << 2);
      0003B2 AE 50 0F         [ 2]  885 	ldw	x, #0x500f
      0003B5 F6               [ 1]  886 	ld	a, (x)
      0003B6 A4 FB            [ 1]  887 	and	a, #0xfb
      0003B8 F7               [ 1]  888 	ld	(x), a
      0003B9 81               [ 4]  889 	ret
                                    890 ;	mpu6050.c: 357: void _tm1637DioHigh(void)
                                    891 ;	-----------------------------------------
                                    892 ;	 function _tm1637DioHigh
                                    893 ;	-----------------------------------------
      0003BA                        894 __tm1637DioHigh:
                                    895 ;	mpu6050.c: 361: PD_ODR |= 1 << 3;
      0003BA AE 50 0F         [ 2]  896 	ldw	x, #0x500f
      0003BD F6               [ 1]  897 	ld	a, (x)
      0003BE AA 08            [ 1]  898 	or	a, #0x08
      0003C0 F7               [ 1]  899 	ld	(x), a
      0003C1 81               [ 4]  900 	ret
                                    901 ;	mpu6050.c: 365: void _tm1637DioLow(void)
                                    902 ;	-----------------------------------------
                                    903 ;	 function _tm1637DioLow
                                    904 ;	-----------------------------------------
      0003C2                        905 __tm1637DioLow:
                                    906 ;	mpu6050.c: 367: PD_ODR &= ~(1 << 3);
      0003C2 AE 50 0F         [ 2]  907 	ldw	x, #0x500f
      0003C5 F6               [ 1]  908 	ld	a, (x)
      0003C6 A4 F7            [ 1]  909 	and	a, #0xf7
      0003C8 F7               [ 1]  910 	ld	(x), a
      0003C9 81               [ 4]  911 	ret
                                    912 ;	mpu6050.c: 378: void initMPU6050(){
                                    913 ;	-----------------------------------------
                                    914 ;	 function initMPU6050
                                    915 ;	-----------------------------------------
      0003CA                        916 _initMPU6050:
                                    917 ;	mpu6050.c: 380: i2c_set_start_ack();
      0003CA CDr01r32         [ 4]  918 	call	_i2c_set_start_ack
                                    919 ;	mpu6050.c: 381: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      0003CD 4B 00            [ 1]  920 	push	#0x00
      0003CF 4B 68            [ 1]  921 	push	#0x68
      0003D1 CDr00rF0         [ 4]  922 	call	_i2c_send_address
      0003D4 5B 02            [ 2]  923 	addw	sp, #2
                                    924 ;	mpu6050.c: 382: i2c_send_reg(0x6B);
      0003D6 4B 6B            [ 1]  925 	push	#0x6b
      0003D8 CDr00rB7         [ 4]  926 	call	_i2c_send_reg
      0003DB 84               [ 1]  927 	pop	a
                                    928 ;	mpu6050.c: 383: i2c_send_reg(0x80);
      0003DC 4B 80            [ 1]  929 	push	#0x80
      0003DE CDr00rB7         [ 4]  930 	call	_i2c_send_reg
      0003E1 84               [ 1]  931 	pop	a
                                    932 ;	mpu6050.c: 384: i2c_set_stop();
      0003E2 CDr00rAF         [ 4]  933 	call	_i2c_set_stop
                                    934 ;	mpu6050.c: 385: delay(100);
      0003E5 4B 64            [ 1]  935 	push	#0x64
      0003E7 4B 00            [ 1]  936 	push	#0x00
      0003E9 CDr00r4B         [ 4]  937 	call	_delay
      0003EC 5B 02            [ 2]  938 	addw	sp, #2
                                    939 ;	mpu6050.c: 386: i2c_set_start_ack();
      0003EE CDr01r32         [ 4]  940 	call	_i2c_set_start_ack
                                    941 ;	mpu6050.c: 387: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      0003F1 4B 00            [ 1]  942 	push	#0x00
      0003F3 4B 68            [ 1]  943 	push	#0x68
      0003F5 CDr00rF0         [ 4]  944 	call	_i2c_send_address
      0003F8 5B 02            [ 2]  945 	addw	sp, #2
                                    946 ;	mpu6050.c: 388: i2c_send_reg(0x6B);
      0003FA 4B 6B            [ 1]  947 	push	#0x6b
      0003FC CDr00rB7         [ 4]  948 	call	_i2c_send_reg
      0003FF 84               [ 1]  949 	pop	a
                                    950 ;	mpu6050.c: 389: i2c_send_reg(0x00);
      000400 4B 00            [ 1]  951 	push	#0x00
      000402 CDr00rB7         [ 4]  952 	call	_i2c_send_reg
      000405 84               [ 1]  953 	pop	a
                                    954 ;	mpu6050.c: 390: i2c_set_stop();
      000406 CDr00rAF         [ 4]  955 	call	_i2c_set_stop
                                    956 ;	mpu6050.c: 391: delay(100);
      000409 4B 64            [ 1]  957 	push	#0x64
      00040B 4B 00            [ 1]  958 	push	#0x00
      00040D CDr00r4B         [ 4]  959 	call	_delay
      000410 5B 02            [ 2]  960 	addw	sp, #2
                                    961 ;	mpu6050.c: 392: i2c_set_start_ack();
      000412 CDr01r32         [ 4]  962 	call	_i2c_set_start_ack
                                    963 ;	mpu6050.c: 393: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      000415 4B 00            [ 1]  964 	push	#0x00
      000417 4B 68            [ 1]  965 	push	#0x68
      000419 CDr00rF0         [ 4]  966 	call	_i2c_send_address
      00041C 5B 02            [ 2]  967 	addw	sp, #2
                                    968 ;	mpu6050.c: 394: i2c_send_reg(0x1A);
      00041E 4B 1A            [ 1]  969 	push	#0x1a
      000420 CDr00rB7         [ 4]  970 	call	_i2c_send_reg
      000423 84               [ 1]  971 	pop	a
                                    972 ;	mpu6050.c: 395: i2c_send_reg(0x01);
      000424 4B 01            [ 1]  973 	push	#0x01
      000426 CDr00rB7         [ 4]  974 	call	_i2c_send_reg
      000429 84               [ 1]  975 	pop	a
                                    976 ;	mpu6050.c: 396: i2c_set_stop();
      00042A CDr00rAF         [ 4]  977 	call	_i2c_set_stop
                                    978 ;	mpu6050.c: 397: delay(100);
      00042D 4B 64            [ 1]  979 	push	#0x64
      00042F 4B 00            [ 1]  980 	push	#0x00
      000431 CDr00r4B         [ 4]  981 	call	_delay
      000434 5B 02            [ 2]  982 	addw	sp, #2
                                    983 ;	mpu6050.c: 398: i2c_set_start_ack();
      000436 CDr01r32         [ 4]  984 	call	_i2c_set_start_ack
                                    985 ;	mpu6050.c: 399: i2c_send_address (MPU6050_ADDR, I2C_WRITE);
      000439 4B 00            [ 1]  986 	push	#0x00
      00043B 4B 68            [ 1]  987 	push	#0x68
      00043D CDr00rF0         [ 4]  988 	call	_i2c_send_address
      000440 5B 02            [ 2]  989 	addw	sp, #2
                                    990 ;	mpu6050.c: 400: i2c_send_reg(0x1B);
      000442 4B 1B            [ 1]  991 	push	#0x1b
      000444 CDr00rB7         [ 4]  992 	call	_i2c_send_reg
      000447 84               [ 1]  993 	pop	a
                                    994 ;	mpu6050.c: 401: i2c_send_reg(0x01);
      000448 4B 01            [ 1]  995 	push	#0x01
      00044A CDr00rB7         [ 4]  996 	call	_i2c_send_reg
      00044D 84               [ 1]  997 	pop	a
                                    998 ;	mpu6050.c: 402: i2c_set_stop();
      00044E CCr00rAF         [ 2]  999 	jp	_i2c_set_stop
                                   1000 ;	mpu6050.c: 435: unsigned int getMPU6050(){
                                   1001 ;	-----------------------------------------
                                   1002 ;	 function getMPU6050
                                   1003 ;	-----------------------------------------
      000451                       1004 _getMPU6050:
      000451 52 06            [ 2] 1005 	sub	sp, #6
                                   1006 ;	mpu6050.c: 439: xh = i2c_read_register (MPU6050_ADDR, 0x43);
      000453 4B 43            [ 1] 1007 	push	#0x43
      000455 4B 68            [ 1] 1008 	push	#0x68
      000457 CDr01r8C         [ 4] 1009 	call	_i2c_read_register
      00045A 5B 02            [ 2] 1010 	addw	sp, #2
      00045C 6B 02            [ 1] 1011 	ld	(0x02, sp), a
                                   1012 ;	mpu6050.c: 440: UARTPrintF("read 1 \n\r");
      00045E AEr06r25         [ 2] 1013 	ldw	x, #___str_0+0
      000461 89               [ 2] 1014 	pushw	x
      000462 CDr00rD9         [ 4] 1015 	call	_UARTPrintF
      000465 5B 02            [ 2] 1016 	addw	sp, #2
                                   1017 ;	mpu6050.c: 441: xl = i2c_read_register (MPU6050_ADDR, 0x44);
      000467 4B 44            [ 1] 1018 	push	#0x44
      000469 4B 68            [ 1] 1019 	push	#0x68
      00046B CDr01r8C         [ 4] 1020 	call	_i2c_read_register
      00046E 5B 02            [ 2] 1021 	addw	sp, #2
      000470 6B 01            [ 1] 1022 	ld	(0x01, sp), a
                                   1023 ;	mpu6050.c: 442: UARTPrintF("read 2 \n\r");
      000472 AEr06r2F         [ 2] 1024 	ldw	x, #___str_1+0
      000475 89               [ 2] 1025 	pushw	x
      000476 CDr00rD9         [ 4] 1026 	call	_UARTPrintF
      000479 5B 02            [ 2] 1027 	addw	sp, #2
                                   1028 ;	mpu6050.c: 443: xx = xh << 8 | xl;
      00047B 7B 02            [ 1] 1029 	ld	a, (0x02, sp)
      00047D 95               [ 1] 1030 	ld	xh, a
      00047E 4F               [ 1] 1031 	clr	a
      00047F 0F 06            [ 1] 1032 	clr	(0x06, sp)
      000481 7B 01            [ 1] 1033 	ld	a, (0x01, sp)
      000483 0F 03            [ 1] 1034 	clr	(0x03, sp)
      000485 1A 06            [ 1] 1035 	or	a, (0x06, sp)
      000487 02               [ 1] 1036 	rlwa	x
      000488 1A 03            [ 1] 1037 	or	a, (0x03, sp)
      00048A 95               [ 1] 1038 	ld	xh, a
                                   1039 ;	mpu6050.c: 444: return(xx);
      00048B 5B 06            [ 2] 1040 	addw	sp, #6
      00048D 81               [ 4] 1041 	ret
                                   1042 ;	mpu6050.c: 448: int main () {
                                   1043 ;	-----------------------------------------
                                   1044 ;	 function main
                                   1045 ;	-----------------------------------------
      00048E                       1046 _main:
      00048E 52 16            [ 2] 1047 	sub	sp, #22
                                   1048 ;	mpu6050.c: 455: InitializeSystemClock();
      000490 CDr00r0B         [ 4] 1049 	call	_InitializeSystemClock
                                   1050 ;	mpu6050.c: 457: PB_DDR = (0 << 4);
      000493 35 00 50 07      [ 1] 1051 	mov	0x5007+0, #0x00
                                   1052 ;	mpu6050.c: 458: PB_DDR = (0 << 5);
      000497 35 00 50 07      [ 1] 1053 	mov	0x5007+0, #0x00
                                   1054 ;	mpu6050.c: 463: PD_DDR = (1 << 3) | (1 << 2); // output mode
      00049B 35 0C 50 11      [ 1] 1055 	mov	0x5011+0, #0x0c
                                   1056 ;	mpu6050.c: 464: PD_CR2 = (1 << 3) | (1 << 2); // up to 10MHz speed
      00049F 35 0C 50 13      [ 1] 1057 	mov	0x5013+0, #0x0c
                                   1058 ;	mpu6050.c: 465: PD_CR1 = 0; // push-pull
      0004A3 35 00 50 12      [ 1] 1059 	mov	0x5012+0, #0x00
                                   1060 ;	mpu6050.c: 466: PD_CR2 = 0; // up to 10MHz speed
      0004A7 35 00 50 13      [ 1] 1061 	mov	0x5013+0, #0x00
                                   1062 ;	mpu6050.c: 467: tm1637Init();
      0004AB CDr02r69         [ 4] 1063 	call	_tm1637Init
                                   1064 ;	mpu6050.c: 469: InitializeUART();
      0004AE CDr01rF6         [ 4] 1065 	call	_InitializeUART
                                   1066 ;	mpu6050.c: 470: UARTPrintF("uart initialised \n\r");
      0004B1 AEr06r39         [ 2] 1067 	ldw	x, #___str_2+0
      0004B4 89               [ 2] 1068 	pushw	x
      0004B5 CDr00rD9         [ 4] 1069 	call	_UARTPrintF
      0004B8 5B 02            [ 2] 1070 	addw	sp, #2
                                   1071 ;	mpu6050.c: 471: InitializeI2C();
      0004BA CDr01rCE         [ 4] 1072 	call	_InitializeI2C
                                   1073 ;	mpu6050.c: 472: delay(200);
      0004BD 4B C8            [ 1] 1074 	push	#0xc8
      0004BF 4B 00            [ 1] 1075 	push	#0x00
      0004C1 CDr00r4B         [ 4] 1076 	call	_delay
      0004C4 5B 02            [ 2] 1077 	addw	sp, #2
                                   1078 ;	mpu6050.c: 473: UARTPrintF("testing 0 \n\r");
      0004C6 AEr06r4D         [ 2] 1079 	ldw	x, #___str_3+0
      0004C9 89               [ 2] 1080 	pushw	x
      0004CA CDr00rD9         [ 4] 1081 	call	_UARTPrintF
      0004CD 5B 02            [ 2] 1082 	addw	sp, #2
                                   1083 ;	mpu6050.c: 474: initMPU6050();
      0004CF CDr03rCA         [ 4] 1084 	call	_initMPU6050
                                   1085 ;	mpu6050.c: 475: delay(200);
      0004D2 4B C8            [ 1] 1086 	push	#0xc8
      0004D4 4B 00            [ 1] 1087 	push	#0x00
      0004D6 CDr00r4B         [ 4] 1088 	call	_delay
      0004D9 5B 02            [ 2] 1089 	addw	sp, #2
                                   1090 ;	mpu6050.c: 478: UARTPrintF("testing 1 \n\r");
      0004DB AEr06r5A         [ 2] 1091 	ldw	x, #___str_4+0
      0004DE 89               [ 2] 1092 	pushw	x
      0004DF CDr00rD9         [ 4] 1093 	call	_UARTPrintF
      0004E2 5B 02            [ 2] 1094 	addw	sp, #2
                                   1095 ;	mpu6050.c: 479: while (1) {
      0004E4                       1096 00114$:
                                   1097 ;	mpu6050.c: 480: objTemp = getMPU6050();
      0004E4 CDr04r51         [ 4] 1098 	call	_getMPU6050
      0004E7 89               [ 2] 1099 	pushw	x
      0004E8 CDr00r00         [ 4] 1100 	call	___uint2fs
      0004EB 5B 02            [ 2] 1101 	addw	sp, #2
      0004ED 1F 03            [ 2] 1102 	ldw	(0x03, sp), x
      0004EF 17 01            [ 2] 1103 	ldw	(0x01, sp), y
                                   1104 ;	mpu6050.c: 484: while (objTemp > 1000) {
      0004F1 5F               [ 1] 1105 	clrw	x
      0004F2 1F 0B            [ 2] 1106 	ldw	(0x0b, sp), x
      0004F4                       1107 00101$:
      0004F4 5F               [ 1] 1108 	clrw	x
      0004F5 89               [ 2] 1109 	pushw	x
      0004F6 4B 7A            [ 1] 1110 	push	#0x7a
      0004F8 4B 44            [ 1] 1111 	push	#0x44
      0004FA 1E 07            [ 2] 1112 	ldw	x, (0x07, sp)
      0004FC 89               [ 2] 1113 	pushw	x
      0004FD 1E 07            [ 2] 1114 	ldw	x, (0x07, sp)
      0004FF 89               [ 2] 1115 	pushw	x
      000500 CDr00r00         [ 4] 1116 	call	___fsgt
      000503 5B 08            [ 2] 1117 	addw	sp, #8
      000505 4D               [ 1] 1118 	tnz	a
      000506 27 1C            [ 1] 1119 	jreq	00127$
                                   1120 ;	mpu6050.c: 485: vierde+=1;
      000508 1E 0B            [ 2] 1121 	ldw	x, (0x0b, sp)
      00050A 5C               [ 2] 1122 	incw	x
      00050B 1F 0B            [ 2] 1123 	ldw	(0x0b, sp), x
                                   1124 ;	mpu6050.c: 486: objTemp-=1000;
      00050D 5F               [ 1] 1125 	clrw	x
      00050E 89               [ 2] 1126 	pushw	x
      00050F 4B 7A            [ 1] 1127 	push	#0x7a
      000511 4B 44            [ 1] 1128 	push	#0x44
      000513 1E 07            [ 2] 1129 	ldw	x, (0x07, sp)
      000515 89               [ 2] 1130 	pushw	x
      000516 1E 07            [ 2] 1131 	ldw	x, (0x07, sp)
      000518 89               [ 2] 1132 	pushw	x
      000519 CDr00r00         [ 4] 1133 	call	___fssub
      00051C 5B 08            [ 2] 1134 	addw	sp, #8
      00051E 1F 03            [ 2] 1135 	ldw	(0x03, sp), x
      000520 17 01            [ 2] 1136 	ldw	(0x01, sp), y
      000522 20 D0            [ 2] 1137 	jra	00101$
                                   1138 ;	mpu6050.c: 488: while (objTemp > 100) {
      000524                       1139 00127$:
      000524 16 0B            [ 2] 1140 	ldw	y, (0x0b, sp)
      000526 17 13            [ 2] 1141 	ldw	(0x13, sp), y
      000528 5F               [ 1] 1142 	clrw	x
      000529 1F 07            [ 2] 1143 	ldw	(0x07, sp), x
      00052B                       1144 00104$:
      00052B 5F               [ 1] 1145 	clrw	x
      00052C 89               [ 2] 1146 	pushw	x
      00052D 4B C8            [ 1] 1147 	push	#0xc8
      00052F 4B 42            [ 1] 1148 	push	#0x42
      000531 1E 07            [ 2] 1149 	ldw	x, (0x07, sp)
      000533 89               [ 2] 1150 	pushw	x
      000534 1E 07            [ 2] 1151 	ldw	x, (0x07, sp)
      000536 89               [ 2] 1152 	pushw	x
      000537 CDr00r00         [ 4] 1153 	call	___fsgt
      00053A 5B 08            [ 2] 1154 	addw	sp, #8
      00053C 4D               [ 1] 1155 	tnz	a
      00053D 27 1C            [ 1] 1156 	jreq	00128$
                                   1157 ;	mpu6050.c: 489: derde+=1;
      00053F 1E 07            [ 2] 1158 	ldw	x, (0x07, sp)
      000541 5C               [ 2] 1159 	incw	x
      000542 1F 07            [ 2] 1160 	ldw	(0x07, sp), x
                                   1161 ;	mpu6050.c: 490: objTemp-=100;
      000544 5F               [ 1] 1162 	clrw	x
      000545 89               [ 2] 1163 	pushw	x
      000546 4B C8            [ 1] 1164 	push	#0xc8
      000548 4B 42            [ 1] 1165 	push	#0x42
      00054A 1E 07            [ 2] 1166 	ldw	x, (0x07, sp)
      00054C 89               [ 2] 1167 	pushw	x
      00054D 1E 07            [ 2] 1168 	ldw	x, (0x07, sp)
      00054F 89               [ 2] 1169 	pushw	x
      000550 CDr00r00         [ 4] 1170 	call	___fssub
      000553 5B 08            [ 2] 1171 	addw	sp, #8
      000555 1F 03            [ 2] 1172 	ldw	(0x03, sp), x
      000557 17 01            [ 2] 1173 	ldw	(0x01, sp), y
      000559 20 D0            [ 2] 1174 	jra	00104$
                                   1175 ;	mpu6050.c: 492: while (objTemp > 10) {
      00055B                       1176 00128$:
      00055B 16 07            [ 2] 1177 	ldw	y, (0x07, sp)
      00055D 17 15            [ 2] 1178 	ldw	(0x15, sp), y
      00055F 5F               [ 1] 1179 	clrw	x
      000560 1F 05            [ 2] 1180 	ldw	(0x05, sp), x
      000562                       1181 00107$:
      000562 5F               [ 1] 1182 	clrw	x
      000563 89               [ 2] 1183 	pushw	x
      000564 4B 20            [ 1] 1184 	push	#0x20
      000566 4B 41            [ 1] 1185 	push	#0x41
      000568 1E 07            [ 2] 1186 	ldw	x, (0x07, sp)
      00056A 89               [ 2] 1187 	pushw	x
      00056B 1E 07            [ 2] 1188 	ldw	x, (0x07, sp)
      00056D 89               [ 2] 1189 	pushw	x
      00056E CDr00r00         [ 4] 1190 	call	___fsgt
      000571 5B 08            [ 2] 1191 	addw	sp, #8
      000573 4D               [ 1] 1192 	tnz	a
      000574 27 1C            [ 1] 1193 	jreq	00129$
                                   1194 ;	mpu6050.c: 493: tweede+=1;
      000576 1E 05            [ 2] 1195 	ldw	x, (0x05, sp)
      000578 5C               [ 2] 1196 	incw	x
      000579 1F 05            [ 2] 1197 	ldw	(0x05, sp), x
                                   1198 ;	mpu6050.c: 494: objTemp-=10;
      00057B 5F               [ 1] 1199 	clrw	x
      00057C 89               [ 2] 1200 	pushw	x
      00057D 4B 20            [ 1] 1201 	push	#0x20
      00057F 4B 41            [ 1] 1202 	push	#0x41
      000581 1E 07            [ 2] 1203 	ldw	x, (0x07, sp)
      000583 89               [ 2] 1204 	pushw	x
      000584 1E 07            [ 2] 1205 	ldw	x, (0x07, sp)
      000586 89               [ 2] 1206 	pushw	x
      000587 CDr00r00         [ 4] 1207 	call	___fssub
      00058A 5B 08            [ 2] 1208 	addw	sp, #8
      00058C 1F 03            [ 2] 1209 	ldw	(0x03, sp), x
      00058E 17 01            [ 2] 1210 	ldw	(0x01, sp), y
      000590 20 D0            [ 2] 1211 	jra	00107$
                                   1212 ;	mpu6050.c: 496: while (objTemp > 0)
      000592                       1213 00129$:
      000592 16 05            [ 2] 1214 	ldw	y, (0x05, sp)
      000594 17 11            [ 2] 1215 	ldw	(0x11, sp), y
      000596 5F               [ 1] 1216 	clrw	x
      000597 1F 09            [ 2] 1217 	ldw	(0x09, sp), x
      000599                       1218 00110$:
      000599 5F               [ 1] 1219 	clrw	x
      00059A 89               [ 2] 1220 	pushw	x
      00059B 5F               [ 1] 1221 	clrw	x
      00059C 89               [ 2] 1222 	pushw	x
      00059D 1E 07            [ 2] 1223 	ldw	x, (0x07, sp)
      00059F 89               [ 2] 1224 	pushw	x
      0005A0 1E 07            [ 2] 1225 	ldw	x, (0x07, sp)
      0005A2 89               [ 2] 1226 	pushw	x
      0005A3 CDr00r00         [ 4] 1227 	call	___fsgt
      0005A6 5B 08            [ 2] 1228 	addw	sp, #8
      0005A8 4D               [ 1] 1229 	tnz	a
      0005A9 27 1C            [ 1] 1230 	jreq	00112$
                                   1231 ;	mpu6050.c: 498: eerste+=1;
      0005AB 1E 09            [ 2] 1232 	ldw	x, (0x09, sp)
      0005AD 5C               [ 2] 1233 	incw	x
      0005AE 1F 09            [ 2] 1234 	ldw	(0x09, sp), x
                                   1235 ;	mpu6050.c: 499: objTemp-=1;
      0005B0 5F               [ 1] 1236 	clrw	x
      0005B1 89               [ 2] 1237 	pushw	x
      0005B2 4B 80            [ 1] 1238 	push	#0x80
      0005B4 4B 3F            [ 1] 1239 	push	#0x3f
      0005B6 1E 07            [ 2] 1240 	ldw	x, (0x07, sp)
      0005B8 89               [ 2] 1241 	pushw	x
      0005B9 1E 07            [ 2] 1242 	ldw	x, (0x07, sp)
      0005BB 89               [ 2] 1243 	pushw	x
      0005BC CDr00r00         [ 4] 1244 	call	___fssub
      0005BF 5B 08            [ 2] 1245 	addw	sp, #8
      0005C1 1F 03            [ 2] 1246 	ldw	(0x03, sp), x
      0005C3 17 01            [ 2] 1247 	ldw	(0x01, sp), y
      0005C5 20 D2            [ 2] 1248 	jra	00110$
      0005C7                       1249 00112$:
                                   1250 ;	mpu6050.c: 510: utemp=vierde*1000+derde*100+tweede*10+eerste;
      0005C7 1E 13            [ 2] 1251 	ldw	x, (0x13, sp)
      0005C9 89               [ 2] 1252 	pushw	x
      0005CA 4B E8            [ 1] 1253 	push	#0xe8
      0005CC 4B 03            [ 1] 1254 	push	#0x03
      0005CE CDr00r00         [ 4] 1255 	call	__mulint
      0005D1 5B 04            [ 2] 1256 	addw	sp, #4
      0005D3 1F 0F            [ 2] 1257 	ldw	(0x0f, sp), x
      0005D5 1E 15            [ 2] 1258 	ldw	x, (0x15, sp)
      0005D7 89               [ 2] 1259 	pushw	x
      0005D8 4B 64            [ 1] 1260 	push	#0x64
      0005DA 4B 00            [ 1] 1261 	push	#0x00
      0005DC CDr00r00         [ 4] 1262 	call	__mulint
      0005DF 5B 04            [ 2] 1263 	addw	sp, #4
      0005E1 72 FB 0F         [ 2] 1264 	addw	x, (0x0f, sp)
      0005E4 1F 0D            [ 2] 1265 	ldw	(0x0d, sp), x
      0005E6 1E 11            [ 2] 1266 	ldw	x, (0x11, sp)
      0005E8 89               [ 2] 1267 	pushw	x
      0005E9 4B 0A            [ 1] 1268 	push	#0x0a
      0005EB 4B 00            [ 1] 1269 	push	#0x00
      0005ED CDr00r00         [ 4] 1270 	call	__mulint
      0005F0 5B 04            [ 2] 1271 	addw	sp, #4
      0005F2 72 FB 0D         [ 2] 1272 	addw	x, (0x0d, sp)
      0005F5 72 FB 09         [ 2] 1273 	addw	x, (0x09, sp)
      0005F8 90 5F            [ 1] 1274 	clrw	y
      0005FA 5D               [ 2] 1275 	tnzw	x
      0005FB 2A 02            [ 1] 1276 	jrpl	00162$
      0005FD 90 5A            [ 2] 1277 	decw	y
      0005FF                       1278 00162$:
                                   1279 ;	mpu6050.c: 513: tm1637DisplayDecimal(utemp, 1); // eg 37:12
      0005FF 4B 01            [ 1] 1280 	push	#0x01
      000601 4B 00            [ 1] 1281 	push	#0x00
      000603 89               [ 2] 1282 	pushw	x
      000604 90 89            [ 2] 1283 	pushw	y
      000606 CDr02r70         [ 4] 1284 	call	_tm1637DisplayDecimal
      000609 5B 06            [ 2] 1285 	addw	sp, #6
                                   1286 ;	mpu6050.c: 517: delayTenMicro();
      00060B CDr00r00         [ 4] 1287 	call	_delayTenMicro
      00060E CCr04rE4         [ 2] 1288 	jp	00114$
      000611 5B 16            [ 2] 1289 	addw	sp, #22
      000613 81               [ 4] 1290 	ret
                                   1291 	.area CODE
      000614                       1292 _segmentMap:
      000614 3F                    1293 	.db #0x3F	;  63
      000615 06                    1294 	.db #0x06	;  6
      000616 5B                    1295 	.db #0x5B	;  91
      000617 4F                    1296 	.db #0x4F	;  79	'O'
      000618 66                    1297 	.db #0x66	;  102	'f'
      000619 6D                    1298 	.db #0x6D	;  109	'm'
      00061A 7D                    1299 	.db #0x7D	;  125
      00061B 07                    1300 	.db #0x07	;  7
      00061C 7F                    1301 	.db #0x7F	;  127
      00061D 6F                    1302 	.db #0x6F	;  111	'o'
      00061E 77                    1303 	.db #0x77	;  119	'w'
      00061F 7C                    1304 	.db #0x7C	;  124
      000620 39                    1305 	.db #0x39	;  57	'9'
      000621 5E                    1306 	.db #0x5E	;  94
      000622 79                    1307 	.db #0x79	;  121	'y'
      000623 71                    1308 	.db #0x71	;  113	'q'
      000624 00                    1309 	.db #0x00	;  0
      000625                       1310 ___str_0:
      000625 72 65 61 64 20 31 20  1311 	.ascii "read 1 "
      00062C 0A                    1312 	.db 0x0A
      00062D 0D                    1313 	.db 0x0D
      00062E 00                    1314 	.db 0x00
      00062F                       1315 ___str_1:
      00062F 72 65 61 64 20 32 20  1316 	.ascii "read 2 "
      000636 0A                    1317 	.db 0x0A
      000637 0D                    1318 	.db 0x0D
      000638 00                    1319 	.db 0x00
      000639                       1320 ___str_2:
      000639 75 61 72 74 20 69 6E  1321 	.ascii "uart initialised "
             69 74 69 61 6C 69 73
             65 64 20
      00064A 0A                    1322 	.db 0x0A
      00064B 0D                    1323 	.db 0x0D
      00064C 00                    1324 	.db 0x00
      00064D                       1325 ___str_3:
      00064D 74 65 73 74 69 6E 67  1326 	.ascii "testing 0 "
             20 30 20
      000657 0A                    1327 	.db 0x0A
      000658 0D                    1328 	.db 0x0D
      000659 00                    1329 	.db 0x00
      00065A                       1330 ___str_4:
      00065A 74 65 73 74 69 6E 67  1331 	.ascii "testing 1 "
             20 31 20
      000664 0A                    1332 	.db 0x0A
      000665 0D                    1333 	.db 0x0D
      000666 00                    1334 	.db 0x00
                                   1335 	.area INITIALIZER
                                   1336 	.area CABS (ABS)
