                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.0 #14184 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module LCD1602
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM4_ClearFlag
                                     12 	.globl _TIM4_GetFlagStatus
                                     13 	.globl _TIM4_SetCounter
                                     14 	.globl _TIM4_Cmd
                                     15 	.globl _TIM4_TimeBaseInit
                                     16 	.globl _GPIO_WriteLow
                                     17 	.globl _GPIO_WriteHigh
                                     18 	.globl _GPIO_Init
                                     19 	.globl _delay_ms
                                     20 	.globl _lcd_init
                                     21 	.globl _lcd_write
                                     22 	.globl _lcd_puts
                                     23 	.globl _lcd_clear
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DATA
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DABS (ABS)
                                     36 
                                     37 ; default segment ordering for linker
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area CONST
                                     42 	.area INITIALIZER
                                     43 	.area CODE
                                     44 
                                     45 ;--------------------------------------------------------
                                     46 ; global & static initialisations
                                     47 ;--------------------------------------------------------
                                     48 	.area HOME
                                     49 	.area GSINIT
                                     50 	.area GSFINAL
                                     51 	.area GSINIT
                                     52 ;--------------------------------------------------------
                                     53 ; Home
                                     54 ;--------------------------------------------------------
                                     55 	.area HOME
                                     56 	.area HOME
                                     57 ;--------------------------------------------------------
                                     58 ; code
                                     59 ;--------------------------------------------------------
                                     60 	.area CODE
                                     61 ;	LCD1602.c: 3: void delay_ms(uint16_t u16Delay)
                                     62 ;	-----------------------------------------
                                     63 ;	 function delay_ms
                                     64 ;	-----------------------------------------
      0085BB                         65 _delay_ms:
      0085BB 52 04            [ 2]   66 	sub	sp, #4
      0085BD 1F 01            [ 2]   67 	ldw	(0x01, sp), x
                                     68 ;	LCD1602.c: 5: TIM4_TimeBaseInit(TIM4_PRESCALER_128, 125 - 1);
      0085BF 4B 7C            [ 1]   69 	push	#0x7c
      0085C1 A6 07            [ 1]   70 	ld	a, #0x07
      0085C3 CD 81 40         [ 4]   71 	call	_TIM4_TimeBaseInit
                                     72 ;	LCD1602.c: 6: TIM4_Cmd(ENABLE);
      0085C6 A6 01            [ 1]   73 	ld	a, #0x01
      0085C8 CD 81 4C         [ 4]   74 	call	_TIM4_Cmd
                                     75 ;	LCD1602.c: 7: while (u16Delay) 
      0085CB 16 01            [ 2]   76 	ldw	y, (0x01, sp)
      0085CD 17 03            [ 2]   77 	ldw	(0x03, sp), y
      0085CF                         78 00104$:
      0085CF 1E 03            [ 2]   79 	ldw	x, (0x03, sp)
      0085D1 27 18            [ 1]   80 	jreq	00107$
                                     81 ;	LCD1602.c: 9: TIM4_SetCounter(0);
      0085D3 4F               [ 1]   82 	clr	a
      0085D4 CD 81 F1         [ 4]   83 	call	_TIM4_SetCounter
                                     84 ;	LCD1602.c: 10: TIM4_ClearFlag(TIM4_FLAG_UPDATE);
      0085D7 A6 01            [ 1]   85 	ld	a, #0x01
      0085D9 CD 82 11         [ 4]   86 	call	_TIM4_ClearFlag
                                     87 ;	LCD1602.c: 11: while (TIM4_GetFlagStatus(TIM4_FLAG_UPDATE) == RESET) {}
      0085DC                         88 00101$:
      0085DC A6 01            [ 1]   89 	ld	a, #0x01
      0085DE CD 82 01         [ 4]   90 	call	_TIM4_GetFlagStatus
      0085E1 4D               [ 1]   91 	tnz	a
      0085E2 27 F8            [ 1]   92 	jreq	00101$
                                     93 ;	LCD1602.c: 12: --u16Delay;
      0085E4 1E 03            [ 2]   94 	ldw	x, (0x03, sp)
      0085E6 5A               [ 2]   95 	decw	x
      0085E7 1F 03            [ 2]   96 	ldw	(0x03, sp), x
      0085E9 20 E4            [ 2]   97 	jra	00104$
      0085EB                         98 00107$:
                                     99 ;	LCD1602.c: 14: }
      0085EB 5B 04            [ 2]  100 	addw	sp, #4
      0085ED 81               [ 4]  101 	ret
                                    102 ;	LCD1602.c: 15: void lcd_init(void)
                                    103 ;	-----------------------------------------
                                    104 ;	 function lcd_init
                                    105 ;	-----------------------------------------
      0085EE                        106 _lcd_init:
                                    107 ;	LCD1602.c: 18: GPIO_Init(GPIOA,(GPIO_Pin_TypeDef)(GPIO_PIN_1|GPIO_PIN_2),GPIO_MODE_OUT_PP_LOW_FAST);
      0085EE 4B E0            [ 1]  108 	push	#0xe0
      0085F0 A6 06            [ 1]  109 	ld	a, #0x06
      0085F2 AE 50 00         [ 2]  110 	ldw	x, #0x5000
      0085F5 CD 80 63         [ 4]  111 	call	_GPIO_Init
                                    112 ;	LCD1602.c: 19: GPIO_Init(GPIOD,(GPIO_Pin_TypeDef)(GPIO_PIN_6|GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2),GPIO_MODE_OUT_PP_LOW_FAST);
      0085F8 4B E0            [ 1]  113 	push	#0xe0
      0085FA A6 5C            [ 1]  114 	ld	a, #0x5c
      0085FC AE 50 0F         [ 2]  115 	ldw	x, #0x500f
      0085FF CD 80 63         [ 4]  116 	call	_GPIO_Init
                                    117 ;	LCD1602.c: 20: delay_ms(40);
      008602 AE 00 28         [ 2]  118 	ldw	x, #0x0028
      008605 CD 85 BB         [ 4]  119 	call	_delay_ms
                                    120 ;	LCD1602.c: 22: PIN_LOW(D4_PORT, D4_PIN);
      008608 A6 04            [ 1]  121 	ld	a, #0x04
      00860A AE 50 0F         [ 2]  122 	ldw	x, #0x500f
      00860D CD 80 E6         [ 4]  123 	call	_GPIO_WriteLow
                                    124 ;	LCD1602.c: 23: PIN_HIGH(D5_PORT,D5_PIN);
      008610 A6 08            [ 1]  125 	ld	a, #0x08
      008612 AE 50 0F         [ 2]  126 	ldw	x, #0x500f
      008615 CD 80 DD         [ 4]  127 	call	_GPIO_WriteHigh
                                    128 ;	LCD1602.c: 24: PIN_LOW(D6_PORT,D6_PIN);
      008618 A6 10            [ 1]  129 	ld	a, #0x10
      00861A AE 50 0F         [ 2]  130 	ldw	x, #0x500f
      00861D CD 80 E6         [ 4]  131 	call	_GPIO_WriteLow
                                    132 ;	LCD1602.c: 25: PIN_LOW(D7_PORT,D7_PIN);
      008620 A6 40            [ 1]  133 	ld	a, #0x40
      008622 AE 50 0F         [ 2]  134 	ldw	x, #0x500f
      008625 CD 80 E6         [ 4]  135 	call	_GPIO_WriteLow
                                    136 ;	LCD1602.c: 26: PIN_LOW(RS_PORT,RS_PIN);
      008628 A6 02            [ 1]  137 	ld	a, #0x02
      00862A AE 50 00         [ 2]  138 	ldw	x, #0x5000
      00862D CD 80 E6         [ 4]  139 	call	_GPIO_WriteLow
                                    140 ;	LCD1602.c: 28: PIN_HIGH(EN_PORT,EN_PIN);
      008630 A6 04            [ 1]  141 	ld	a, #0x04
      008632 AE 50 00         [ 2]  142 	ldw	x, #0x5000
      008635 CD 80 DD         [ 4]  143 	call	_GPIO_WriteHigh
                                    144 ;	LCD1602.c: 29: PIN_LOW(EN_PORT,EN_PIN);
      008638 A6 04            [ 1]  145 	ld	a, #0x04
      00863A AE 50 00         [ 2]  146 	ldw	x, #0x5000
      00863D CD 80 E6         [ 4]  147 	call	_GPIO_WriteLow
                                    148 ;	LCD1602.c: 31: lcd_write(0,0x28);
      008640 4B 28            [ 1]  149 	push	#0x28
      008642 4F               [ 1]  150 	clr	a
      008643 CD 86 59         [ 4]  151 	call	_lcd_write
                                    152 ;	LCD1602.c: 32: lcd_write(0,0x0c);
      008646 4B 0C            [ 1]  153 	push	#0x0c
      008648 4F               [ 1]  154 	clr	a
      008649 CD 86 59         [ 4]  155 	call	_lcd_write
                                    156 ;	LCD1602.c: 33: lcd_write(0,0x06);
      00864C 4B 06            [ 1]  157 	push	#0x06
      00864E 4F               [ 1]  158 	clr	a
      00864F CD 86 59         [ 4]  159 	call	_lcd_write
                                    160 ;	LCD1602.c: 34: lcd_write(0,0x01);
      008652 4B 01            [ 1]  161 	push	#0x01
      008654 4F               [ 1]  162 	clr	a
      008655 CD 86 59         [ 4]  163 	call	_lcd_write
                                    164 ;	LCD1602.c: 35: }
      008658 81               [ 4]  165 	ret
                                    166 ;	LCD1602.c: 37: void lcd_write(uint8_t type, uint8_t data)
                                    167 ;	-----------------------------------------
                                    168 ;	 function lcd_write
                                    169 ;	-----------------------------------------
      008659                        170 _lcd_write:
      008659 88               [ 1]  171 	push	a
                                    172 ;	LCD1602.c: 39: delay_ms(2);
      00865A 88               [ 1]  173 	push	a
      00865B AE 00 02         [ 2]  174 	ldw	x, #0x0002
      00865E CD 85 BB         [ 4]  175 	call	_delay_ms
      008661 84               [ 1]  176 	pop	a
                                    177 ;	LCD1602.c: 40: if(type)
      008662 4D               [ 1]  178 	tnz	a
      008663 27 0A            [ 1]  179 	jreq	00102$
                                    180 ;	LCD1602.c: 42: PIN_HIGH(RS_PORT,RS_PIN);
      008665 A6 02            [ 1]  181 	ld	a, #0x02
      008667 AE 50 00         [ 2]  182 	ldw	x, #0x5000
      00866A CD 80 DD         [ 4]  183 	call	_GPIO_WriteHigh
      00866D 20 08            [ 2]  184 	jra	00103$
      00866F                        185 00102$:
                                    186 ;	LCD1602.c: 45: PIN_LOW(RS_PORT,RS_PIN);
      00866F A6 02            [ 1]  187 	ld	a, #0x02
      008671 AE 50 00         [ 2]  188 	ldw	x, #0x5000
      008674 CD 80 E6         [ 4]  189 	call	_GPIO_WriteLow
      008677                        190 00103$:
                                    191 ;	LCD1602.c: 49: if(data&0x80)
      008677 7B 04            [ 1]  192 	ld	a, (0x04, sp)
      008679 6B 01            [ 1]  193 	ld	(0x01, sp), a
      00867B 2A 0A            [ 1]  194 	jrpl	00105$
                                    195 ;	LCD1602.c: 51: PIN_HIGH(D7_PORT,D7_PIN);
      00867D A6 40            [ 1]  196 	ld	a, #0x40
      00867F AE 50 0F         [ 2]  197 	ldw	x, #0x500f
      008682 CD 80 DD         [ 4]  198 	call	_GPIO_WriteHigh
      008685 20 08            [ 2]  199 	jra	00106$
      008687                        200 00105$:
                                    201 ;	LCD1602.c: 54: PIN_LOW(D7_PORT,D7_PIN);
      008687 A6 40            [ 1]  202 	ld	a, #0x40
      008689 AE 50 0F         [ 2]  203 	ldw	x, #0x500f
      00868C CD 80 E6         [ 4]  204 	call	_GPIO_WriteLow
      00868F                        205 00106$:
                                    206 ;	LCD1602.c: 57: if(data&0x40)
      00868F 7B 01            [ 1]  207 	ld	a, (0x01, sp)
      008691 A5 40            [ 1]  208 	bcp	a, #0x40
      008693 27 0A            [ 1]  209 	jreq	00108$
                                    210 ;	LCD1602.c: 59: PIN_HIGH(D6_PORT,D6_PIN);
      008695 A6 10            [ 1]  211 	ld	a, #0x10
      008697 AE 50 0F         [ 2]  212 	ldw	x, #0x500f
      00869A CD 80 DD         [ 4]  213 	call	_GPIO_WriteHigh
      00869D 20 08            [ 2]  214 	jra	00109$
      00869F                        215 00108$:
                                    216 ;	LCD1602.c: 62: PIN_LOW(D6_PORT,D6_PIN);
      00869F A6 10            [ 1]  217 	ld	a, #0x10
      0086A1 AE 50 0F         [ 2]  218 	ldw	x, #0x500f
      0086A4 CD 80 E6         [ 4]  219 	call	_GPIO_WriteLow
      0086A7                        220 00109$:
                                    221 ;	LCD1602.c: 65: if(data&0x20)
      0086A7 7B 01            [ 1]  222 	ld	a, (0x01, sp)
      0086A9 A5 20            [ 1]  223 	bcp	a, #0x20
      0086AB 27 0A            [ 1]  224 	jreq	00111$
                                    225 ;	LCD1602.c: 67: PIN_HIGH(D5_PORT,D5_PIN);
      0086AD A6 08            [ 1]  226 	ld	a, #0x08
      0086AF AE 50 0F         [ 2]  227 	ldw	x, #0x500f
      0086B2 CD 80 DD         [ 4]  228 	call	_GPIO_WriteHigh
      0086B5 20 08            [ 2]  229 	jra	00112$
      0086B7                        230 00111$:
                                    231 ;	LCD1602.c: 70: PIN_LOW(D5_PORT,D5_PIN);
      0086B7 A6 08            [ 1]  232 	ld	a, #0x08
      0086B9 AE 50 0F         [ 2]  233 	ldw	x, #0x500f
      0086BC CD 80 E6         [ 4]  234 	call	_GPIO_WriteLow
      0086BF                        235 00112$:
                                    236 ;	LCD1602.c: 73: if(data&0x10)
      0086BF 7B 01            [ 1]  237 	ld	a, (0x01, sp)
      0086C1 A5 10            [ 1]  238 	bcp	a, #0x10
      0086C3 27 0A            [ 1]  239 	jreq	00114$
                                    240 ;	LCD1602.c: 75: PIN_HIGH(D4_PORT,D4_PIN);
      0086C5 A6 04            [ 1]  241 	ld	a, #0x04
      0086C7 AE 50 0F         [ 2]  242 	ldw	x, #0x500f
      0086CA CD 80 DD         [ 4]  243 	call	_GPIO_WriteHigh
      0086CD 20 08            [ 2]  244 	jra	00115$
      0086CF                        245 00114$:
                                    246 ;	LCD1602.c: 78: PIN_LOW(D4_PORT,D4_PIN);
      0086CF A6 04            [ 1]  247 	ld	a, #0x04
      0086D1 AE 50 0F         [ 2]  248 	ldw	x, #0x500f
      0086D4 CD 80 E6         [ 4]  249 	call	_GPIO_WriteLow
      0086D7                        250 00115$:
                                    251 ;	LCD1602.c: 80: PIN_HIGH(EN_PORT,EN_PIN);
      0086D7 A6 04            [ 1]  252 	ld	a, #0x04
      0086D9 AE 50 00         [ 2]  253 	ldw	x, #0x5000
      0086DC CD 80 DD         [ 4]  254 	call	_GPIO_WriteHigh
                                    255 ;	LCD1602.c: 81: PIN_LOW(EN_PORT,EN_PIN);
      0086DF A6 04            [ 1]  256 	ld	a, #0x04
      0086E1 AE 50 00         [ 2]  257 	ldw	x, #0x5000
      0086E4 CD 80 E6         [ 4]  258 	call	_GPIO_WriteLow
                                    259 ;	LCD1602.c: 85: if(data&0x08)
      0086E7 7B 01            [ 1]  260 	ld	a, (0x01, sp)
      0086E9 A5 08            [ 1]  261 	bcp	a, #0x08
      0086EB 27 0A            [ 1]  262 	jreq	00117$
                                    263 ;	LCD1602.c: 87: PIN_HIGH(D7_PORT,D7_PIN);
      0086ED A6 40            [ 1]  264 	ld	a, #0x40
      0086EF AE 50 0F         [ 2]  265 	ldw	x, #0x500f
      0086F2 CD 80 DD         [ 4]  266 	call	_GPIO_WriteHigh
      0086F5 20 08            [ 2]  267 	jra	00118$
      0086F7                        268 00117$:
                                    269 ;	LCD1602.c: 90: PIN_LOW(D7_PORT,D7_PIN);
      0086F7 A6 40            [ 1]  270 	ld	a, #0x40
      0086F9 AE 50 0F         [ 2]  271 	ldw	x, #0x500f
      0086FC CD 80 E6         [ 4]  272 	call	_GPIO_WriteLow
      0086FF                        273 00118$:
                                    274 ;	LCD1602.c: 93: if(data&0x04)
      0086FF 7B 01            [ 1]  275 	ld	a, (0x01, sp)
      008701 A5 04            [ 1]  276 	bcp	a, #0x04
      008703 27 0A            [ 1]  277 	jreq	00120$
                                    278 ;	LCD1602.c: 95: PIN_HIGH(D6_PORT,D6_PIN);
      008705 A6 10            [ 1]  279 	ld	a, #0x10
      008707 AE 50 0F         [ 2]  280 	ldw	x, #0x500f
      00870A CD 80 DD         [ 4]  281 	call	_GPIO_WriteHigh
      00870D 20 08            [ 2]  282 	jra	00121$
      00870F                        283 00120$:
                                    284 ;	LCD1602.c: 98: PIN_LOW(D6_PORT,D6_PIN);
      00870F A6 10            [ 1]  285 	ld	a, #0x10
      008711 AE 50 0F         [ 2]  286 	ldw	x, #0x500f
      008714 CD 80 E6         [ 4]  287 	call	_GPIO_WriteLow
      008717                        288 00121$:
                                    289 ;	LCD1602.c: 101: if(data&0x02)
      008717 7B 01            [ 1]  290 	ld	a, (0x01, sp)
      008719 A5 02            [ 1]  291 	bcp	a, #0x02
      00871B 27 0A            [ 1]  292 	jreq	00123$
                                    293 ;	LCD1602.c: 103: PIN_HIGH(D5_PORT,D5_PIN);
      00871D A6 08            [ 1]  294 	ld	a, #0x08
      00871F AE 50 0F         [ 2]  295 	ldw	x, #0x500f
      008722 CD 80 DD         [ 4]  296 	call	_GPIO_WriteHigh
      008725 20 08            [ 2]  297 	jra	00124$
      008727                        298 00123$:
                                    299 ;	LCD1602.c: 106: PIN_LOW(D5_PORT,D5_PIN);
      008727 A6 08            [ 1]  300 	ld	a, #0x08
      008729 AE 50 0F         [ 2]  301 	ldw	x, #0x500f
      00872C CD 80 E6         [ 4]  302 	call	_GPIO_WriteLow
      00872F                        303 00124$:
                                    304 ;	LCD1602.c: 109: if(data&0x01)
      00872F 7B 01            [ 1]  305 	ld	a, (0x01, sp)
      008731 44               [ 1]  306 	srl	a
      008732 24 0A            [ 1]  307 	jrnc	00126$
                                    308 ;	LCD1602.c: 111: PIN_HIGH(D4_PORT,D4_PIN);
      008734 A6 04            [ 1]  309 	ld	a, #0x04
      008736 AE 50 0F         [ 2]  310 	ldw	x, #0x500f
      008739 CD 80 DD         [ 4]  311 	call	_GPIO_WriteHigh
      00873C 20 08            [ 2]  312 	jra	00127$
      00873E                        313 00126$:
                                    314 ;	LCD1602.c: 114: PIN_LOW(D4_PORT,D4_PIN);
      00873E A6 04            [ 1]  315 	ld	a, #0x04
      008740 AE 50 0F         [ 2]  316 	ldw	x, #0x500f
      008743 CD 80 E6         [ 4]  317 	call	_GPIO_WriteLow
      008746                        318 00127$:
                                    319 ;	LCD1602.c: 116: PIN_HIGH(EN_PORT,EN_PIN);
      008746 A6 04            [ 1]  320 	ld	a, #0x04
      008748 AE 50 00         [ 2]  321 	ldw	x, #0x5000
      00874B CD 80 DD         [ 4]  322 	call	_GPIO_WriteHigh
                                    323 ;	LCD1602.c: 117: PIN_LOW(EN_PORT,EN_PIN);
      00874E A6 04            [ 1]  324 	ld	a, #0x04
      008750 AE 50 00         [ 2]  325 	ldw	x, #0x5000
      008753 16 02            [ 2]  326 	ldw	y, (2, sp)
      008755 17 03            [ 2]  327 	ldw	(3, sp), y
      008757 5B 02            [ 2]  328 	addw	sp, #2
      008759 CC 80 E6         [ 2]  329 	jp	_GPIO_WriteLow
                                    330 ;	LCD1602.c: 118: }
      00875C 84               [ 1]  331 	pop	a
      00875D 85               [ 2]  332 	popw	x
      00875E 84               [ 1]  333 	pop	a
      00875F FC               [ 2]  334 	jp	(x)
                                    335 ;	LCD1602.c: 120: void lcd_puts(uint8_t x, uint8_t y, int8_t *string)
                                    336 ;	-----------------------------------------
                                    337 ;	 function lcd_puts
                                    338 ;	-----------------------------------------
      008760                        339 _lcd_puts:
                                    340 ;	LCD1602.c: 125: lcd_write(0,0x80+0x00+y);
      008760 41               [ 1]  341 	exg	a, xl
      008761 7B 03            [ 1]  342 	ld	a, (0x03, sp)
      008763 41               [ 1]  343 	exg	a, xl
                                    344 ;	LCD1602.c: 122: switch(x)
      008764 A1 00            [ 1]  345 	cp	a, #0x00
      008766 27 05            [ 1]  346 	jreq	00101$
      008768 4A               [ 1]  347 	dec	a
      008769 27 0C            [ 1]  348 	jreq	00102$
      00876B 20 12            [ 2]  349 	jra	00112$
                                    350 ;	LCD1602.c: 124: case 0: //Row 0
      00876D                        351 00101$:
                                    352 ;	LCD1602.c: 125: lcd_write(0,0x80+0x00+y);
      00876D 9F               [ 1]  353 	ld	a, xl
      00876E AB 80            [ 1]  354 	add	a, #0x80
      008770 88               [ 1]  355 	push	a
      008771 4F               [ 1]  356 	clr	a
      008772 CD 86 59         [ 4]  357 	call	_lcd_write
                                    358 ;	LCD1602.c: 126: break;
      008775 20 08            [ 2]  359 	jra	00112$
                                    360 ;	LCD1602.c: 127: case 1: //Row 1
      008777                        361 00102$:
                                    362 ;	LCD1602.c: 128: lcd_write(0,0x80+0x40+y);
      008777 9F               [ 1]  363 	ld	a, xl
      008778 AB C0            [ 1]  364 	add	a, #0xc0
      00877A 88               [ 1]  365 	push	a
      00877B 4F               [ 1]  366 	clr	a
      00877C CD 86 59         [ 4]  367 	call	_lcd_write
                                    368 ;	LCD1602.c: 131: while(*string)
      00877F                        369 00112$:
      00877F 1E 04            [ 2]  370 	ldw	x, (0x04, sp)
      008781                        371 00104$:
      008781 F6               [ 1]  372 	ld	a, (x)
      008782 27 0B            [ 1]  373 	jreq	00107$
                                    374 ;	LCD1602.c: 133: lcd_write(1,*string);
      008784 89               [ 2]  375 	pushw	x
      008785 88               [ 1]  376 	push	a
      008786 A6 01            [ 1]  377 	ld	a, #0x01
      008788 CD 86 59         [ 4]  378 	call	_lcd_write
      00878B 85               [ 2]  379 	popw	x
                                    380 ;	LCD1602.c: 134: string++;
      00878C 5C               [ 1]  381 	incw	x
      00878D 20 F2            [ 2]  382 	jra	00104$
      00878F                        383 00107$:
                                    384 ;	LCD1602.c: 136: }
      00878F 1E 01            [ 2]  385 	ldw	x, (1, sp)
      008791 5B 05            [ 2]  386 	addw	sp, #5
      008793 FC               [ 2]  387 	jp	(x)
                                    388 ;	LCD1602.c: 137: void lcd_clear(void)
                                    389 ;	-----------------------------------------
                                    390 ;	 function lcd_clear
                                    391 ;	-----------------------------------------
      008794                        392 _lcd_clear:
                                    393 ;	LCD1602.c: 139: lcd_write(0,0x01);
      008794 4B 01            [ 1]  394 	push	#0x01
      008796 4F               [ 1]  395 	clr	a
      008797 CD 86 59         [ 4]  396 	call	_lcd_write
                                    397 ;	LCD1602.c: 140: }
      00879A 81               [ 4]  398 	ret
                                    399 	.area CODE
                                    400 	.area CONST
                                    401 	.area INITIALIZER
                                    402 	.area CABS (ABS)
